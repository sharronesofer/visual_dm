"""Fix: use Flask-SQLAlchemy metadata for all models

Revision ID: 5fe4ea650221
Revises: 80c327d50293
Create Date: 2025-05-16 09:44:11.562926

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5fe4ea650221'
down_revision: Union[str, None] = '80c327d50293'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('is_discovered', sa.Boolean(), nullable=True),
    sa.Column('is_accessible', sa.Boolean(), nullable=True),
    sa.Column('coordinates', sa.JSON(), nullable=True),
    sa.Column('size', sa.JSON(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.String(length=50), nullable=True),
    sa.Column('resources', sa.JSON(), nullable=True),
    sa.Column('npcs', sa.JSON(), nullable=True),
    sa.Column('points_of_interest', sa.JSON(), nullable=True),
    sa.Column('current_version_id', sa.Integer(), nullable=True),
    sa.Column('parent_location_id', sa.Integer(), nullable=True),
    sa.Column('owner_faction_id', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('objects', sa.JSON(), nullable=True),
    sa.Column('state', sa.JSON(), nullable=True),
    sa.Column('encounters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('is_discovered', sa.Boolean(), nullable=True),
    sa.Column('is_accessible', sa.Boolean(), nullable=True),
    sa.Column('coordinates', sa.JSON(), nullable=True),
    sa.Column('size', sa.JSON(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.String(length=50), nullable=True),
    sa.Column('resources', sa.JSON(), nullable=True),
    sa.Column('npcs', sa.JSON(), nullable=True),
    sa.Column('points_of_interest', sa.JSON(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('current_version_id', sa.Integer(), nullable=True),
    sa.Column('parent_location_id', sa.Integer(), nullable=True),
    sa.Column('owner_faction_id', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('objects', sa.JSON(), nullable=True),
    sa.Column('state', sa.JSON(), nullable=True),
    sa.Column('encounters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_locations_region_id', 'locations', ['region_id'], unique=False)
    op.create_table('parties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('inventory', sa.JSON(), nullable=True),
    sa.Column('quest_log', sa.JSON(), nullable=True),
    sa.Column('max_size', sa.Integer(), nullable=True),
    sa.Column('leader_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['leader_id'], ['characters.id'], name='fk_party_leader', use_alter=True),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], name='fk_party_region', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('race', sa.String(length=50), nullable=True),
    sa.Column('class', sa.String(length=50), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('alignment', sa.String(length=50), nullable=True),
    sa.Column('background', sa.String(length=255), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('skills', sa.JSON(), nullable=True),
    sa.Column('inventory', sa.JSON(), nullable=True),
    sa.Column('gold', sa.Integer(), nullable=True),
    sa.Column('party_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['party_id'], ['parties.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_characters_party_id', 'characters', ['party_id'], unique=False)
    op.create_index('ix_characters_region_id', 'characters', ['region_id'], unique=False)
    op.create_table('code_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(length=100), nullable=False),
    sa.Column('commit_hash', sa.String(length=255), nullable=False),
    sa.Column('branch_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('npcs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Enum('MERCHANT', 'QUEST_GIVER', 'GUARD', 'TRAINER', 'CIVILIAN', 'ENEMY', name='npctype'), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('disposition', sa.Enum('HOSTILE', 'NEUTRAL', 'FRIENDLY', name='npcdisposition'), nullable=False),
    sa.Column('base_disposition', sa.Float(), nullable=False),
    sa.Column('level_requirement', sa.Integer(), nullable=False),
    sa.Column('interaction_cooldown', sa.Integer(), nullable=False),
    sa.Column('last_interaction', sa.DateTime(), nullable=True),
    sa.Column('current_location_id', sa.Integer(), nullable=True),
    sa.Column('home_location_id', sa.Integer(), nullable=True),
    sa.Column('schedule', sa.JSON(), nullable=False),
    sa.Column('dialogue_options', sa.JSON(), nullable=False),
    sa.Column('behavior_flags', sa.JSON(), nullable=False),
    sa.Column('inventory', sa.JSON(), nullable=False),
    sa.Column('gold', sa.Integer(), nullable=False),
    sa.Column('trade_inventory', sa.JSON(), nullable=False),
    sa.Column('available_quests', sa.JSON(), nullable=False),
    sa.Column('completed_quests', sa.JSON(), nullable=False),
    sa.Column('combat_stats_id', sa.Integer(), nullable=True),
    sa.Column('goals', sa.JSON(), nullable=False),
    sa.Column('relationships', sa.JSON(), nullable=False),
    sa.Column('memories', sa.JSON(), nullable=False),
    sa.Column('current_version_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['current_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['home_location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('npc_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('npc_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('code_version_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('disposition', sa.String(length=20), nullable=False),
    sa.Column('base_disposition', sa.Float(), nullable=False),
    sa.Column('level_requirement', sa.Integer(), nullable=False),
    sa.Column('interaction_cooldown', sa.Integer(), nullable=False),
    sa.Column('current_location_id', sa.Integer(), nullable=True),
    sa.Column('home_location_id', sa.Integer(), nullable=True),
    sa.Column('schedule', sa.JSON(), nullable=False),
    sa.Column('dialogue_options', sa.JSON(), nullable=False),
    sa.Column('behavior_flags', sa.JSON(), nullable=False),
    sa.Column('inventory', sa.JSON(), nullable=False),
    sa.Column('trade_inventory', sa.JSON(), nullable=False),
    sa.Column('available_quests', sa.JSON(), nullable=False),
    sa.Column('completed_quests', sa.JSON(), nullable=False),
    sa.Column('goals', sa.JSON(), nullable=False),
    sa.Column('relationships', sa.JSON(), nullable=False),
    sa.Column('memories', sa.JSON(), nullable=False),
    sa.Column('change_description', sa.Text(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('changed_fields', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['code_version_id'], ['code_versions.id'], ),
    sa.ForeignKeyConstraint(['npc_id'], ['npcs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('npc_id', 'version_number', name='uq_npc_versions')
    )
    op.create_index('ix_npc_versions_npc_id', 'npc_versions', ['npc_id'], unique=False)
    op.create_index('ix_npc_versions_version_number', 'npc_versions', ['version_number'], unique=False)
    op.create_table('worlds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('game_time', sa.JSON(), nullable=True),
    sa.Column('world_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('weather', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('factions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('alignment', sa.String(length=50), nullable=True),
    sa.Column('influence', sa.Float(), nullable=True),
    sa.Column('reputation', sa.Float(), nullable=True),
    sa.Column('resources', sa.JSON(), nullable=True),
    sa.Column('territory', sa.JSON(), nullable=True),
    sa.Column('relationships', sa.JSON(), nullable=True),
    sa.Column('history', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('leader_id', sa.Integer(), nullable=True),
    sa.Column('headquarters_id', sa.Integer(), nullable=True),
    sa.Column('power', sa.Float(), nullable=True),
    sa.Column('wealth', sa.Float(), nullable=True),
    sa.Column('goals', sa.JSON(), nullable=True),
    sa.Column('policies', sa.JSON(), nullable=True),
    sa.Column('state', sa.JSON(), nullable=True),
    sa.Column('world_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['headquarters_id'], ['regions.id'], name='fk_faction_headquarters', use_alter=True),
    sa.ForeignKeyConstraint(['leader_id'], ['npcs.id'], name='fk_faction_leader', use_alter=True),
    sa.ForeignKeyConstraint(['world_id'], ['worlds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('coordinates', sa.JSON(), nullable=False),
    sa.Column('size', sa.JSON(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.String(length=50), nullable=True),
    sa.Column('resources', sa.JSON(), nullable=False),
    sa.Column('npcs', sa.JSON(), nullable=False),
    sa.Column('quests', sa.JSON(), nullable=False),
    sa.Column('points_of_interest', sa.JSON(), nullable=False),
    sa.Column('features', sa.JSON(), nullable=False),
    sa.Column('objects', sa.JSON(), nullable=False),
    sa.Column('state', sa.JSON(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('change_reason', sa.Text(), nullable=False),
    sa.Column('changed_by', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('location_id', 'version_number', name='uq_location_versions')
    )
    op.create_index('ix_location_versions_location_id', 'location_versions', ['location_id'], unique=False)
    op.create_index('ix_location_versions_version_number', 'location_versions', ['version_number'], unique=False)
    op.create_foreign_key('fk_location_versions_location_id', 'location_versions', 'locations', ['location_id'], ['id'])
    op.create_foreign_key('fk_locations_current_version_id', 'locations', 'location_versions', ['current_version_id'], ['id'])
    op.create_table('combat_stats',
    sa.Column('health', sa.Integer(), nullable=True),
    sa.Column('max_health', sa.Integer(), nullable=True),
    sa.Column('stamina', sa.Integer(), nullable=True),
    sa.Column('max_stamina', sa.Integer(), nullable=True),
    sa.Column('mana', sa.Integer(), nullable=True),
    sa.Column('max_mana', sa.Integer(), nullable=True),
    sa.Column('strength', sa.Integer(), nullable=True),
    sa.Column('dexterity', sa.Integer(), nullable=True),
    sa.Column('constitution', sa.Integer(), nullable=True),
    sa.Column('intelligence', sa.Integer(), nullable=True),
    sa.Column('wisdom', sa.Integer(), nullable=True),
    sa.Column('charisma', sa.Integer(), nullable=True),
    sa.Column('melee_attack', sa.Integer(), nullable=True),
    sa.Column('ranged_attack', sa.Integer(), nullable=True),
    sa.Column('magic_attack', sa.Integer(), nullable=True),
    sa.Column('physical_defense', sa.Integer(), nullable=True),
    sa.Column('magic_defense', sa.Integer(), nullable=True),
    sa.Column('dodge', sa.Integer(), nullable=True),
    sa.Column('critical_chance', sa.Float(), nullable=True),
    sa.Column('critical_damage', sa.Float(), nullable=True),
    sa.Column('is_in_combat', sa.Boolean(), nullable=True),
    sa.Column('is_stunned', sa.Boolean(), nullable=True),
    sa.Column('is_poisoned', sa.Boolean(), nullable=True),
    sa.Column('is_bleeding', sa.Boolean(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('npc_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('combats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('initiative_order', sa.JSON(), nullable=False),
    sa.Column('current_turn', sa.Integer(), nullable=False),
    sa.Column('environment', sa.JSON(), nullable=False),
    sa.Column('effects', sa.JSON(), nullable=False),
    sa.Column('log', sa.JSON(), nullable=False),
    sa.Column('tactical_grid_data', sa.JSON(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name='fk_combat_location', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('rarity', sa.String(length=50), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('max_stack', sa.Integer(), nullable=True),
    sa.Column('is_tradeable', sa.Boolean(), nullable=True),
    sa.Column('is_quest_item', sa.Boolean(), nullable=True),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('usage', sa.JSON(), nullable=True),
    sa.Column('crafting', sa.JSON(), nullable=True),
    sa.Column('state', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('relationships',
    sa.Column('entity1_id', sa.Integer(), nullable=False),
    sa.Column('entity1_type', sa.Enum('individual', 'faction', 'party_group', 'region', 'poi', name='entitytype', native_enum=False), nullable=False),
    sa.Column('entity2_id', sa.Integer(), nullable=False),
    sa.Column('entity2_type', sa.Enum('individual', 'faction', 'party_group', 'region', 'poi', name='entitytype', native_enum=False), nullable=False),
    sa.Column('relationship_type', sa.String(length=50), nullable=True),
    sa.Column('relationship_value', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_relationships_entity1', 'relationships', ['entity1_id', 'entity1_type'], unique=False)
    op.create_index('ix_relationships_entity2', 'relationships', ['entity2_id', 'entity2_type'], unique=False)
    op.create_index('ix_relationships_pair', 'relationships', ['entity1_id', 'entity1_type', 'entity2_id', 'entity2_type'], unique=False)
    op.create_table('reputations',
    sa.Column('source_entity_id', sa.Integer(), nullable=False),
    sa.Column('source_entity_type', sa.Enum('individual', 'faction', 'party_group', 'region', 'poi', name='entitytype', native_enum=False), nullable=False),
    sa.Column('target_entity_id', sa.Integer(), nullable=False),
    sa.Column('target_entity_type', sa.Enum('individual', 'faction', 'party_group', 'region', 'poi', name='entitytype', native_enum=False), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('rank', sa.String(length=50), nullable=True),
    sa.Column('strength', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('change_source', sa.String(length=100), nullable=True),
    sa.Column('context', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_reputations_pair', 'reputations', ['source_entity_id', 'source_entity_type', 'target_entity_id', 'target_entity_type'], unique=False)
    op.create_index('ix_reputations_source', 'reputations', ['source_entity_id', 'source_entity_type'], unique=False)
    op.create_index('ix_reputations_target', 'reputations', ['target_entity_id', 'target_entity_type'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('spells',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('school', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('casting_time', sa.String(length=50), nullable=True),
    sa.Column('range', sa.String(length=50), nullable=True),
    sa.Column('components', sa.JSON(), nullable=True),
    sa.Column('duration', sa.String(length=50), nullable=True),
    sa.Column('concentration', sa.Boolean(), nullable=True),
    sa.Column('ritual', sa.Boolean(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_spells',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('spell_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['spell_id'], ['spells.id'], ),
    sa.PrimaryKeyConstraint('character_id', 'spell_id')
    )
    op.create_table('combat_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('combat_id', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=True),
    sa.Column('current_turn', sa.Integer(), nullable=True),
    sa.Column('initiative_order', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['combat_id'], ['combats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment_instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.Column('is_equipped', sa.Boolean(), nullable=True),
    sa.Column('condition', sa.Integer(), nullable=True),
    sa.Column('modifications', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['slot_id'], ['equipment_slots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review_version_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('link_type', sa.String(length=50), nullable=False),
    sa.Column('link_metadata', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['version_id'], ['code_versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('review_id', 'version_id', name='uq_review_version_links')
    )
    op.create_index('ix_review_version_links_review_id', 'review_version_links', ['review_id'], unique=False)
    op.create_index('ix_review_version_links_version_id', 'review_version_links', ['version_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('spell_effects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spell_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('duration', sa.String(length=50), nullable=True),
    sa.Column('magnitude', sa.Float(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['spell_id'], ['spells.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_version_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('link_type', sa.String(length=50), nullable=False),
    sa.Column('link_metadata', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['version_id'], ['code_versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id', 'version_id', name='uq_task_version_links')
    )
    op.create_index('ix_task_version_links_task_id', 'task_version_links', ['task_id'], unique=False)
    op.create_index('ix_task_version_links_version_id', 'task_version_links', ['version_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(length=100), nullable=True),
    sa.Column('reset_token', sa.String(length=100), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('reset_token'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('verification_token')
    )
    op.create_table('world_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_saved_at', sa.DateTime(), nullable=True),
    sa.Column('game_time', sa.Float(), nullable=True),
    sa.Column('time_scale', sa.Float(), nullable=True),
    sa.Column('is_paused', sa.Boolean(), nullable=True),
    sa.Column('current_season', sa.String(length=50), nullable=True),
    sa.Column('season_progress', sa.Float(), nullable=True),
    sa.Column('current_weather', sa.String(length=50), nullable=True),
    sa.Column('weather_duration', sa.Float(), nullable=True),
    sa.Column('world_data', sa.JSON(), nullable=True),
    sa.Column('version_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['version_id'], ['code_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_keys',
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_keys_key'), 'api_keys', ['key'], unique=True)
    op.create_table('combat_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('combat_state_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('npc_id', sa.Integer(), nullable=True),
    sa.Column('initiative', sa.Integer(), nullable=True),
    sa.Column('current_health', sa.Integer(), nullable=True),
    sa.Column('current_mana', sa.Integer(), nullable=True),
    sa.Column('position_q', sa.Integer(), nullable=True),
    sa.Column('position_r', sa.Integer(), nullable=True),
    sa.Column('facing', sa.Integer(), nullable=True),
    sa.Column('status_effects', sa.JSON(), nullable=True),
    sa.Column('used_opportunity_attack', sa.Boolean(), nullable=True),
    sa.Column('reach', sa.Integer(), nullable=True),
    sa.Column('movement_points', sa.Integer(), nullable=True),
    sa.Column('action_points', sa.Integer(), nullable=True),
    sa.Column('bonus_action_available', sa.Boolean(), nullable=True),
    sa.Column('reaction_available', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('combat_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['combat_id'], ['combats.id'], ),
    sa.ForeignKeyConstraint(['combat_state_id'], ['combat_states.id'], ),
    sa.ForeignKeyConstraint(['npc_id'], ['npcs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faction_relations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('faction_id', sa.Integer(), nullable=False),
    sa.Column('other_faction_id', sa.Integer(), nullable=False),
    sa.Column('relation_value', sa.Integer(), nullable=True),
    sa.Column('relation_type', sa.String(length=20), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['faction_id'], ['factions.id'], ),
    sa.ForeignKeyConstraint(['other_faction_id'], ['factions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('faction_id', 'other_faction_id', name='uq_faction_relation')
    )
    op.create_table('infractions',
    sa.Column('player_id', sa.UUID(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('target_npc_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('ATTACK_FRIENDLY_NPC', 'THEFT', 'PROPERTY_DAMAGE', 'TRESPASSING', 'CHEATING', 'EXPLOIT', 'HARASSMENT', 'OTHER', name='infractiontype'), nullable=False),
    sa.Column('severity', sa.Enum('MINOR', 'MODERATE', 'MAJOR', 'CRITICAL', name='infractionseverity'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['target_npc_id'], ['npcs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('points_of_interest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('coordinates', sa.JSON(), nullable=True),
    sa.Column('discovered', sa.Boolean(), nullable=True),
    sa.Column('importance', sa.Float(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['factions.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('type', sa.Enum('MAIN', 'SIDE', 'DAILY', 'WEEKLY', 'EVENT', name='questtype'), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'ACTIVE', 'COMPLETED', 'FAILED', 'EXPIRED', name='queststatus'), nullable=False),
    sa.Column('level_requirement', sa.Integer(), nullable=False),
    sa.Column('experience_reward', sa.Integer(), nullable=False),
    sa.Column('gold_reward', sa.Integer(), nullable=False),
    sa.Column('item_rewards', sa.JSON(), nullable=False),
    sa.Column('prerequisites', sa.JSON(), nullable=False),
    sa.Column('objectives', sa.JSON(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('npc_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('faction_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['faction_id'], ['factions.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['npc_id'], ['npcs.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('faction_id', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['faction_id'], ['factions.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('save_games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('is_auto_save', sa.Boolean(), nullable=True),
    sa.Column('game_state', sa.JSON(), nullable=True),
    sa.Column('character_data', sa.JSON(), nullable=True),
    sa.Column('world_state', sa.JSON(), nullable=True),
    sa.Column('quest_progress', sa.JSON(), nullable=True),
    sa.Column('inventory', sa.JSON(), nullable=True),
    sa.Column('combat_state', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('save_metadata', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('device_info', sa.String(length=200), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('world_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('affected_regions', sa.JSON(), nullable=True),
    sa.Column('consequences', sa.JSON(), nullable=True),
    sa.Column('world_state_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['world_state_id'], ['world_states.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_quests',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('character_id', 'quest_id')
    )
    op.create_table('consequences',
    sa.Column('player_id', sa.UUID(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('infraction_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.Enum('MINOR', 'MODERATE', 'MAJOR', 'CRITICAL', name='infractionseverity'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('issued_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['infraction_id'], ['infractions.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('poi_states',
    sa.Column('poi_id', sa.Integer(), nullable=False),
    sa.Column('state_data', sa.JSON(), nullable=False),
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['poi_id'], ['points_of_interest.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_poi_state_current', 'poi_states', ['poi_id'], unique=False, postgresql_where=sa.text('valid_to IS NULL'))
    op.create_index('ix_poi_state_poiid_valid', 'poi_states', ['poi_id', 'valid_from', 'valid_to'], unique=False)
    op.create_index(op.f('ix_poi_states_poi_id'), 'poi_states', ['poi_id'], unique=False)
    op.create_index(op.f('ix_poi_states_valid_to'), 'poi_states', ['valid_to'], unique=False)
    op.create_table('quest_dependencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('prerequisite_quest_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['prerequisite_quest_id'], ['quests.id'], ),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('reward_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_stages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('objectives', sa.JSON(), nullable=False),
    sa.Column('completion_criteria', sa.JSON(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_world_impacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('impact_type', sa.String(length=100), nullable=False),
    sa.Column('details', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('poi_histories',
    sa.Column('poi_id', sa.Integer(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=False),
    sa.Column('changed_by', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['poi_id'], ['points_of_interest.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['state_id'], ['poi_states.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_poi_histories_changed_at'), 'poi_histories', ['changed_at'], unique=False)
    op.create_index(op.f('ix_poi_histories_poi_id'), 'poi_histories', ['poi_id'], unique=False)
    op.create_index('ix_poi_history_changed_at', 'poi_histories', ['changed_at'], unique=False)
    op.create_index('ix_poi_history_poiid', 'poi_histories', ['poi_id'], unique=False)
    op.create_table('poi_transitions',
    sa.Column('poi_id', sa.Integer(), nullable=False),
    sa.Column('from_state_id', sa.Integer(), nullable=True),
    sa.Column('to_state_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('triggered_by', sa.String(length=100), nullable=True),
    sa.Column('triggered_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['from_state_id'], ['poi_states.id'], ),
    sa.ForeignKeyConstraint(['poi_id'], ['points_of_interest.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_state_id'], ['poi_states.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_poi_transition_event_type', 'poi_transitions', ['event_type'], unique=False)
    op.create_index('ix_poi_transition_poiid', 'poi_transitions', ['poi_id'], unique=False)
    op.create_index('ix_poi_transition_triggered_at', 'poi_transitions', ['triggered_at'], unique=False)
    op.create_index(op.f('ix_poi_transitions_poi_id'), 'poi_transitions', ['poi_id'], unique=False)
    op.create_index(op.f('ix_poi_transitions_triggered_at'), 'poi_transitions', ['triggered_at'], unique=False)
    op.create_table('quest_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('current_stage_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('stage_conditions', sa.JSON(), nullable=False),
    sa.Column('optional_objectives', sa.JSON(), nullable=False),
    sa.Column('quest_choices', sa.JSON(), nullable=False),
    sa.Column('quest_state', sa.JSON(), nullable=False),
    sa.Column('attempt_count', sa.Integer(), nullable=False),
    sa.Column('last_attempt_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['current_stage_id'], ['quest_stages.id'], ),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_progress_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('progress_id', sa.Integer(), nullable=False),
    sa.Column('snapshot_data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['progress_id'], ['quest_progress.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_foreign_key('fk_combat_stats_npc_id', 'combat_stats', 'npcs', ['npc_id'], ['id'])
    op.create_foreign_key('fk_npcs_combat_stats_id', 'npcs', 'combat_stats', ['combat_stats_id'], ['id'])
    op.create_foreign_key('fk_npcs_current_version_id', 'npcs', 'npc_versions', ['current_version_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('quest_progress_snapshots')
    op.drop_table('quest_progress')
    op.drop_index(op.f('ix_poi_transitions_triggered_at'), table_name='poi_transitions')
    op.drop_index(op.f('ix_poi_transitions_poi_id'), table_name='poi_transitions')
    op.drop_index('ix_poi_transition_triggered_at', table_name='poi_transitions')
    op.drop_index('ix_poi_transition_poiid', table_name='poi_transitions')
    op.drop_index('ix_poi_transition_event_type', table_name='poi_transitions')
    op.drop_table('poi_transitions')
    op.drop_index('ix_poi_history_poiid', table_name='poi_histories')
    op.drop_index('ix_poi_history_changed_at', table_name='poi_histories')
    op.drop_index(op.f('ix_poi_histories_poi_id'), table_name='poi_histories')
    op.drop_index(op.f('ix_poi_histories_changed_at'), table_name='poi_histories')
    op.drop_table('poi_histories')
    op.drop_table('quest_world_impacts')
    op.drop_table('quest_stages')
    op.drop_table('quest_rewards')
    op.drop_table('quest_dependencies')
    op.drop_index(op.f('ix_poi_states_valid_to'), table_name='poi_states')
    op.drop_index(op.f('ix_poi_states_poi_id'), table_name='poi_states')
    op.drop_index('ix_poi_state_poiid_valid', table_name='poi_states')
    op.drop_index('ix_poi_state_current', table_name='poi_states', postgresql_where=sa.text('valid_to IS NULL'))
    op.drop_table('poi_states')
    op.drop_table('consequences')
    op.drop_table('character_quests')
    op.drop_table('world_events')
    op.drop_table('sessions')
    op.drop_table('save_games')
    op.drop_table('resources')
    op.drop_table('quests')
    op.drop_table('points_of_interest')
    op.drop_table('infractions')
    op.drop_table('faction_relations')
    op.drop_table('combat_participants')
    op.drop_index(op.f('ix_api_keys_key'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_table('world_states')
    op.drop_table('users')
    op.drop_index('ix_task_version_links_version_id', table_name='task_version_links')
    op.drop_index('ix_task_version_links_task_id', table_name='task_version_links')
    op.drop_table('task_version_links')
    op.drop_table('spell_effects')
    op.drop_table('role_permissions')
    op.drop_index('ix_review_version_links_version_id', table_name='review_version_links')
    op.drop_index('ix_review_version_links_review_id', table_name='review_version_links')
    op.drop_table('review_version_links')
    op.drop_index('ix_regions_type', table_name='regions')
    op.drop_table('regions')
    op.drop_index('ix_location_change_logs_version_id', table_name='location_change_logs')
    op.drop_index('ix_location_change_logs_location_id', table_name='location_change_logs')
    op.drop_table('location_change_logs')
    op.drop_index('ix_inventory_items_type', table_name='inventory_items')
    op.drop_index('ix_inventory_items_rarity', table_name='inventory_items')
    op.drop_index('ix_inventory_items_owner_id', table_name='inventory_items')
    op.drop_table('inventory_items')
    op.drop_index('ix_interactions_pair', table_name='interactions')
    op.drop_index('ix_interactions_entity2', table_name='interactions')
    op.drop_index('ix_interactions_entity1', table_name='interactions')
    op.drop_table('interactions')
    op.drop_table('factions')
    op.drop_table('equipment_instances')
    op.drop_table('combat_states')
    op.drop_table('character_spells')
    op.drop_table('worlds')
    op.drop_table('spells')
    op.drop_table('roles')
    op.drop_index('ix_reputations_target', table_name='reputations')
    op.drop_index('ix_reputations_source', table_name='reputations')
    op.drop_index('ix_reputations_pair', table_name='reputations')
    op.drop_table('reputations')
    op.drop_index('ix_relationships_pair', table_name='relationships')
    op.drop_index('ix_relationships_entity2', table_name='relationships')
    op.drop_index('ix_relationships_entity1', table_name='relationships')
    op.drop_table('relationships')
    op.drop_table('permissions')
    op.drop_table('parties')
    op.drop_index('ix_npc_versions_version_number', table_name='npc_versions')
    op.drop_index('ix_npc_versions_npc_id', table_name='npc_versions')
    op.drop_table('npc_versions')
    op.drop_index('ix_locations_region_id', table_name='locations')
    op.drop_table('locations')
    op.drop_index('ix_location_versions_version_number', table_name='location_versions')
    op.drop_index('ix_location_versions_location_id', table_name='location_versions')
    op.drop_table('location_versions')
    op.drop_table('items')
    op.drop_table('equipment_slots')
    op.drop_table('combats')
    op.drop_table('combat_stats')
    op.drop_table('combat_actions')
    op.drop_index('ix_code_versions_tag_name', table_name='code_versions')
    op.drop_index('ix_code_versions_commit_hash', table_name='code_versions')
    op.drop_index('ix_code_versions_branch_name', table_name='code_versions')
    op.drop_table('code_versions')
    op.drop_index('ix_characters_region_id', table_name='characters')
    op.drop_index('ix_characters_party_id', table_name='characters')
    op.drop_table('characters')
    op.drop_table('npcs')
    # ### end Alembic commands ###
