{
  "summary": {
    "todo_comments": 116,
    "deprecated_functions": 27,
    "unused_imports": 23,
    "duplicate_implementations": 1266,
    "files_analyzed": 767
  },
  "detailed_issues": {
    "todo_comments": [
      {
        "file": "backend/systems/economy/models/resource.py",
        "line": 116,
        "comment": "Faction relationship commented out for testing - Faction model uses JSON resources column, not SQLAlchemy relationship",
        "full_line": "# TODO: Faction relationship commented out for testing - Faction model uses JSON resources column, not SQLAlchemy relationship",
        "context": [
          "    # Relationships",
          "    region = relationship(\"Region\", back_populates=\"resource_entities\")",
          "    futures = relationship(\"CommodityFuture\", back_populates=\"resource\")",
          "    # TODO: Faction relationship commented out for testing - Faction model uses JSON resources column, not SQLAlchemy relationship",
          "    # faction = relationship(\"Faction\", back_populates=\"resources_rel\")",
          "",
          "    def to_data_model(self) -> ResourceData:"
        ]
      },
      {
        "file": "backend/systems/llm/language_generator.py",
        "line": 46,
        "comment": "Implement actual language generation logic",
        "full_line": "# TODO: Implement actual language generation logic",
        "context": [
          "        Returns:",
          "            Generated response dictionary or None if generation fails",
          "        \"\"\"",
          "        # TODO: Implement actual language generation logic",
          "        # This could integrate with GPT, Claude, or other language models",
          "",
          "        logger.warning(\"Using stub language generation - implement actual logic\")"
        ]
      },
      {
        "file": "backend/systems/llm/core/integrations/gpt_integration.py",
        "line": 39,
        "comment": "These are temporary stubs for missing modules during refactoring",
        "full_line": "# TODO: These are temporary stubs for missing modules during refactoring",
        "context": [
          "    return GPTClient.get_instance()",
          "",
          "",
          "# TODO: These are temporary stubs for missing modules during refactoring",
          "try:",
          "    from backend.systems.motif import get_motif_manager",
          "except ImportError:"
        ]
      },
      {
        "file": "backend/systems/world_generation/modding_system.py",
        "line": 185,
        "comment": "Implement proper JSON schema validation",
        "full_line": "# TODO: Implement proper JSON schema validation",
        "context": [
          "        Returns:",
          "            True if valid, False otherwise",
          "        \"\"\"",
          "        # TODO: Implement proper JSON schema validation",
          "        # For now, we'll just check for required top-level fields",
          "        required_fields = [\"name\", \"biomes\", \"factions\"]",
          "        for field in required_fields:"
        ]
      },
      {
        "file": "backend/systems/world_generation/modding_system.py",
        "line": 240,
        "comment": "Implement proper JSON schema validation",
        "full_line": "# TODO: Implement proper JSON schema validation",
        "context": [
          "        Returns:",
          "            Tuple of (is_valid, error_messages)",
          "        \"\"\"",
          "        # TODO: Implement proper JSON schema validation",
          "        # For now, we'll just check for schema presence and return placeholder result",
          "        if schema_name not in self.schemas:",
          "            return False, [f\"Schema '{schema_name}' not found\"]"
        ]
      },
      {
        "file": "backend/systems/diplomacy/utils/relationship_utils.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the relationship utils.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/utils/diplomacy_utils.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the diplomacy utils.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/models/relationship_models.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the relationship models.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/models/diplomacy_models.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the diplomacy models.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/calculators/tension_calculator.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the tension calculator.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/calculators/relationship_calculator.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the relationship calculator.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/events/diplomacy_events.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the diplomacy events.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/events/tension_events.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the tension events.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/service_modules/diplomacy_service.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the diplomacy service.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/diplomacy/service_modules/relationship_service.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the relationship service.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/combat/utils/perception_utils.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the perception utils.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py",
          "",
          "        def get_visible_entities(self, observer_id: str) -> Dict[str, str]:",
          "            \"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/repositories/combat_serializer.py",
        "line": 32,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the combat serializer.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py",
          "",
          "        def _effect_to_dict(self, effect: \"CombatEffect\") -> Dict[str, Any]:",
          "            \"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/models/combat_models.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the combat models.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/combat/validators/combat_validator.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the combat validator.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/combat/events/combat_handlers.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the combat handlers.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/combat/events/combat_events.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the combat events.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/combat/services/combat_manager.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the combat manager.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/combat/services/initiative_service.py",
        "line": 21,
        "comment": "Implement methods extracted from combat_class.py",
        "full_line": "# TODO: Implement methods extracted from combat_class.py",
        "context": [
          "        \"\"\"Initialize the initiative service.\"\"\"",
          "        pass",
          "",
          "    # TODO: Implement methods extracted from combat_class.py"
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 99,
        "comment": "Implement magical influence generation based on world state",
        "full_line": "# TODO: Implement magical influence generation based on world state",
        "context": [
          "        Returns:",
          "            List[Dict[str, Any]]: List of magical influences generated",
          "        \"\"\"",
          "        # TODO: Implement magical influence generation based on world state",
          "        # This would typically be connected to the motif system, world state, etc.",
          "",
          "        # For now, return an empty list"
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 118,
        "comment": "Implement magical influence analysis based on location",
        "full_line": "# TODO: Implement magical influence analysis based on location",
        "context": [
          "        Returns:",
          "            Dict[str, Any]: Analysis of magical influences",
          "        \"\"\"",
          "        # TODO: Implement magical influence analysis based on location",
          "        # This would connect to the motif system, world state, etc.",
          "",
          "        # For now, return a placeholder"
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 226,
        "comment": "Implement actual magical influence retrieval from database",
        "full_line": "# TODO: Implement actual magical influence retrieval from database",
        "context": [
          "        Returns:",
          "            List[Dict[str, Any]]: List of magical influences",
          "        \"\"\"",
          "        # TODO: Implement actual magical influence retrieval from database",
          "        # For now, return empty list as this is for narrative context",
          "        return []",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 242,
        "comment": "Implement actual magical influence retrieval from database",
        "full_line": "# TODO: Implement actual magical influence retrieval from database",
        "context": [
          "        Returns:",
          "            Optional[Dict[str, Any]]: The magical influence if found, None otherwise",
          "        \"\"\"",
          "        # TODO: Implement actual magical influence retrieval from database",
          "        # For now, return None as this is for narrative context",
          "        return None",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 258,
        "comment": "Implement actual magic ability creation",
        "full_line": "# TODO: Implement actual magic ability creation",
        "context": [
          "    # Magic Ability CRUD methods",
          "    def create_magic_ability(self, ability_data: Dict[str, Any]) -> Dict[str, Any]:",
          "        \"\"\"Create a new magic ability.\"\"\"",
          "        # TODO: Implement actual magic ability creation",
          "        # For now, return a mock response",
          "        return {",
          "            \"id\": 1,"
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 272,
        "comment": "Implement actual magic ability retrieval",
        "full_line": "# TODO: Implement actual magic ability retrieval",
        "context": [
          "",
          "    def get_magic_ability(self, ability_id: int) -> Optional[Dict[str, Any]]:",
          "        \"\"\"Get a magic ability by ID.\"\"\"",
          "        # TODO: Implement actual magic ability retrieval",
          "        # For now, return None to trigger 404 in tests",
          "        return None",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 278,
        "comment": "Implement actual magic ability update",
        "full_line": "# TODO: Implement actual magic ability update",
        "context": [
          "",
          "    def update_magic_ability(self, ability_id: int, update_data: Dict[str, Any]) -> Optional[Dict[str, Any]]:",
          "        \"\"\"Update a magic ability.\"\"\"",
          "        # TODO: Implement actual magic ability update",
          "        # For now, return None to trigger 404 in tests",
          "        return None",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 284,
        "comment": "Implement actual magic ability deletion",
        "full_line": "# TODO: Implement actual magic ability deletion",
        "context": [
          "",
          "    def delete_magic_ability(self, ability_id: int) -> bool:",
          "        \"\"\"Delete a magic ability.\"\"\"",
          "        # TODO: Implement actual magic ability deletion",
          "        # For now, return False to trigger 404 in tests",
          "        return False",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 342,
        "comment": "Implement actual spell creation",
        "full_line": "# TODO: Implement actual spell creation",
        "context": [
          "",
          "    def create_spell(self, spell_data: Dict[str, Any]) -> Dict[str, Any]:",
          "        \"\"\"Create a new spell.\"\"\"",
          "        # TODO: Implement actual spell creation",
          "        # For now, return a mock response",
          "        return {",
          "            \"id\": 1,"
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 360,
        "comment": "Implement actual spell update",
        "full_line": "# TODO: Implement actual spell update",
        "context": [
          "",
          "    def update_spell(self, spell_id: int, update_data: Dict[str, Any]) -> Optional[Dict[str, Any]]:",
          "        \"\"\"Update a spell.\"\"\"",
          "        # TODO: Implement actual spell update",
          "        # For now, return None to trigger 404 in tests",
          "        return None",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 366,
        "comment": "Implement actual spell deletion",
        "full_line": "# TODO: Implement actual spell deletion",
        "context": [
          "",
          "    def delete_spell(self, spell_id: int) -> bool:",
          "        \"\"\"Delete a spell.\"\"\"",
          "        # TODO: Implement actual spell deletion",
          "        # For now, return False to trigger 404 in tests",
          "        return False",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 428,
        "comment": "Implement actual spellbook creation",
        "full_line": "# TODO: Implement actual spellbook creation",
        "context": [
          "",
          "    def create_spellbook(self, spellbook_data: Dict[str, Any]) -> Dict[str, Any]:",
          "        \"\"\"Create a new spellbook.\"\"\"",
          "        # TODO: Implement actual spellbook creation",
          "        # For now, return a mock response",
          "        return {",
          "            \"id\": 1,"
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 442,
        "comment": "Implement actual spellbook retrieval",
        "full_line": "# TODO: Implement actual spellbook retrieval",
        "context": [
          "",
          "    def get_spellbook_by_id(self, spellbook_id: int) -> Optional[Dict[str, Any]]:",
          "        \"\"\"Get a spellbook by ID.\"\"\"",
          "        # TODO: Implement actual spellbook retrieval",
          "        # For now, return None to trigger 404 in tests",
          "        return None",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 448,
        "comment": "Implement actual spell addition",
        "full_line": "# TODO: Implement actual spell addition",
        "context": [
          "",
          "    def add_spell(self, spellbook_id: int, spell_id: int) -> bool:",
          "        \"\"\"Add a spell to a spellbook.\"\"\"",
          "        # TODO: Implement actual spell addition",
          "        # For now, return False to trigger failure in tests",
          "        return False",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 454,
        "comment": "Implement actual spell removal",
        "full_line": "# TODO: Implement actual spell removal",
        "context": [
          "",
          "    def remove_spell(self, spellbook_id: int, spell_id: int) -> bool:",
          "        \"\"\"Remove a spell from a spellbook.\"\"\"",
          "        # TODO: Implement actual spell removal",
          "        # For now, return False to trigger failure in tests",
          "        return False",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 573,
        "comment": "Implement actual effect ending",
        "full_line": "# TODO: Implement actual effect ending",
        "context": [
          "",
          "    def end_effect(self, effect_id: int) -> bool:",
          "        \"\"\"End a spell effect by ID.\"\"\"",
          "        # TODO: Implement actual effect ending",
          "        # For now, return False to trigger 404 in tests",
          "        return False",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 579,
        "comment": "Implement actual dispel logic",
        "full_line": "# TODO: Implement actual dispel logic",
        "context": [
          "",
          "    def dispel_effect(self, effect_id: int, dispel_power: int) -> tuple[bool, str]:",
          "        \"\"\"Attempt to dispel a spell effect.\"\"\"",
          "        # TODO: Implement actual dispel logic",
          "        # For now, return failure to trigger error in tests",
          "        return False, \"Effect not found\"",
          ""
        ]
      },
      {
        "file": "backend/systems/magic/services.py",
        "line": 585,
        "comment": "Implement actual duration modification",
        "full_line": "# TODO: Implement actual duration modification",
        "context": [
          "",
          "    def modify_duration(self, effect_id: int, duration_change: int) -> Optional[Dict[str, Any]]:",
          "        \"\"\"Modify the duration of a spell effect.\"\"\"",
          "        # TODO: Implement actual duration modification",
          "        # For now, return None to trigger 404 in tests",
          "        return None",
          ""
        ]
      },
      {
        "file": "backend/systems/character/models/visual_model.py",
        "line": 248,
        "comment": "Implement randomization for meshes, materials, and other aspects",
        "full_line": "# TODO: Implement randomization for meshes, materials, and other aspects",
        "context": [
          "                    max_val = range_data.get(\"max\", 1.0)",
          "                    self.blendshapes[name].value = random_uniform(min_val, max_val)",
          "",
          "        # TODO: Implement randomization for meshes, materials, and other aspects",
          "        # This would require access to available options which would typically",
          "        # come from a repository of available assets"
        ]
      },
      {
        "file": "backend/systems/character/npc/npc_features.py",
        "line": 9,
        "comment": "Replace with proper backend imports when models are available",
        "full_line": "# TODO: Replace with proper backend imports when models are available",
        "context": [
          "# Imports",
          "# from app.models.faction import Faction",
          "# from app.models.npc import NPC",
          "# TODO: Replace with proper backend imports when models are available",
          "",
          "",
          "import random"
        ]
      },
      {
        "file": "backend/systems/character/npc/npc_utils.py",
        "line": 13,
        "comment": "Replace with proper backend imports when available",
        "full_line": "# TODO: Replace with proper backend imports when available",
        "context": [
          "# from app.core.utils.firebase_utils import get_firestore_client, get_firebase_db",
          "# from app.core.utils.gpt.client import GPTClient",
          "# from app.models.npc import NPC",
          "# TODO: Replace with proper backend imports when available",
          "",
          "",
          "# Temporary placeholder classes until proper models are implemented"
        ]
      },
      {
        "file": "backend/systems/auth_user/routers/__init__.py",
        "line": 8,
        "comment": "Implement these routers",
        "full_line": "# TODO: Implement these routers",
        "context": [
          "\"\"\"",
          "",
          "# Import routers",
          "# TODO: Implement these routers",
          "# from backend.systems.auth_user.auth_router import router as auth_router",
          "# from backend.systems.auth_user.user_router import router as user_router",
          ""
        ]
      },
      {
        "file": "backend/systems/faction/faction_tick_utils.py",
        "line": 161,
        "comment": "Implement proper SQL-based influence propagation",
        "full_line": "# TODO: Implement proper SQL-based influence propagation",
        "context": [
          "        Dict with statistics about influence propagation",
          "    \"\"\"",
          "    # This is a placeholder for the new SQL-based implementation",
          "    # TODO: Implement proper SQL-based influence propagation",
          "",
          "    return {",
          "        \"message\": \"Faction influence propagation not yet implemented with SQL\","
        ]
      },
      {
        "file": "backend/systems/faction/models/faction.py",
        "line": 124,
        "comment": "NPC relationship commented out for testing - NPC system uses Firebase, not SQLAlchemy",
        "full_line": "# TODO: NPC relationship commented out for testing - NPC system uses Firebase, not SQLAlchemy",
        "context": [
          "    parent_faction_id = Column(Integer, ForeignKey(\"factions.id\"), nullable=True)",
          "",
          "    # Relationships",
          "    # TODO: NPC relationship commented out for testing - NPC system uses Firebase, not SQLAlchemy",
          "    # leader = relationship(\"NPC\", foreign_keys=[leader_id], backref=\"led_faction\")",
          "",
          "    # Only define headquarters relationship if Region model is available"
        ]
      },
      {
        "file": "backend/systems/faction/models/faction.py",
        "line": 136,
        "comment": "controlled_regions relationship commented out for testing - Region model doesn't have controlling_faction_id column",
        "full_line": "# TODO: controlled_regions relationship commented out for testing - Region model doesn't have controlling_faction_id column",
        "context": [
          "    parent_faction = relationship(\"Faction\", remote_side=[id], backref=\"subfactions\")",
          "",
          "    # Child relationships",
          "    # TODO: controlled_regions relationship commented out for testing - Region model doesn't have controlling_faction_id column",
          "    # controlled_regions = relationship(",
          "    #     \"Region\",",
          "    #     backref=\"controlling_faction\","
        ]
      },
      {
        "file": "backend/systems/faction/models/faction.py",
        "line": 321,
        "comment": "Character relationship commented out for testing - Character model import issue",
        "full_line": "# TODO: Character relationship commented out for testing - Character model import issue",
        "context": [
          "",
          "    # Relationships",
          "    faction = relationship(\"Faction\", back_populates=\"members\")",
          "    # TODO: Character relationship commented out for testing - Character model import issue",
          "    # character = relationship(\"Character\", backref=\"faction_memberships\")",
          "",
          "    def __repr__(self):"
        ]
      },
      {
        "file": "backend/systems/rumor/service.py",
        "line": 789,
        "comment": "Add metadata field to Rumor model when needed",
        "full_line": "# TODO: Add metadata field to Rumor model when needed",
        "context": [
          "                    rumor_entry[\"believability\"] = believability",
          "",
          "            # Add related entities if available (metadata field not implemented yet)",
          "            # TODO: Add metadata field to Rumor model when needed",
          "            # related_entities = getattr(rumor, 'metadata', {}).get(\"related_entities\")",
          "            # if related_entities:",
          "            #     rumor_entry[\"related_entities\"] = related_entities"
        ]
      },
      {
        "file": "backend/systems/rumor/service.py",
        "line": 795,
        "comment": "Add metadata field to Rumor model when needed",
        "full_line": "# TODO: Add metadata field to Rumor model when needed",
        "context": [
          "            #     rumor_entry[\"related_entities\"] = related_entities",
          "",
          "            # Add location relevance if specified (metadata field not implemented yet)",
          "            # TODO: Add metadata field to Rumor model when needed",
          "            # if location_id and location_id in getattr(rumor, 'metadata', {}).get(\"locations\", []):",
          "            #     rumor_entry[\"location_relevance\"] = True",
          ""
        ]
      },
      {
        "file": "backend/systems/shared/utils/security/analytics_utils.py",
        "line": 30,
        "comment": "Implement actual analytics tracking",
        "full_line": "# TODO: Implement actual analytics tracking",
        "context": [
          "    Returns:",
          "        True if event was tracked successfully, False otherwise",
          "    \"\"\"",
          "    # TODO: Implement actual analytics tracking",
          "    logger.debug(f\"Analytics event: {event_name} with properties: {properties}\")",
          "    return True",
          ""
        ]
      },
      {
        "file": "backend/systems/shared/utils/security/analytics_utils.py",
        "line": 49,
        "comment": "Implement actual user action tracking",
        "full_line": "# TODO: Implement actual user action tracking",
        "context": [
          "    Returns:",
          "        True if action was tracked successfully, False otherwise",
          "    \"\"\"",
          "    # TODO: Implement actual user action tracking",
          "    logger.debug(f\"User {user_id} performed action: {action} with context: {context}\")",
          "    return True",
          ""
        ]
      },
      {
        "file": "backend/systems/shared/utils/security/analytics_utils.py",
        "line": 65,
        "comment": "Implement actual analytics summary generation",
        "full_line": "# TODO: Implement actual analytics summary generation",
        "context": [
          "    Returns:",
          "        Dictionary containing analytics summary",
          "    \"\"\"",
          "    # TODO: Implement actual analytics summary generation",
          "    return {",
          "        \"start_date\": start_date.isoformat(),",
          "        \"end_date\": end_date.isoformat(),"
        ]
      },
      {
        "file": "backend/systems/shared/utils/security/analytics_utils.py",
        "line": 85,
        "comment": "Implement actual analytics data export",
        "full_line": "# TODO: Implement actual analytics data export",
        "context": [
          "    Returns:",
          "        Exported data as a string",
          "    \"\"\"",
          "    # TODO: Implement actual analytics data export",
          "    if format.lower() == \"json\":",
          "        return json.dumps({\"message\": \"Analytics export not yet implemented\"})",
          "    else:"
        ]
      },
      {
        "file": "backend/systems/shared/utils/security/analytics_utils.py",
        "line": 94,
        "comment": "Enable when analytics system is implemented",
        "full_line": "\"enabled\": False,  # TODO: Enable when analytics system is implemented",
        "context": [
          "",
          "# Placeholder constants for analytics configuration",
          "ANALYTICS_CONFIG = {",
          "    \"enabled\": False,  # TODO: Enable when analytics system is implemented",
          "    \"batch_size\": 100,",
          "    \"flush_interval\": 60,  # seconds",
          "    \"retention_days\": 30,"
        ]
      },
      {
        "file": "backend/systems/storage/autosave_manager.py",
        "line": 111,
        "comment": "Register with event system for checkpoint events",
        "full_line": "# TODO: Register with event system for checkpoint events",
        "context": [
          "        self.autosave_task = asyncio.create_task(self._autosave_loop())",
          "        logger.info(\"Autosave task started\")",
          "",
          "        # TODO: Register with event system for checkpoint events",
          "        # from backend.systems.events import EventDispatcher",
          "        # EventDispatcher.get_instance().subscribe(\"CheckpointEvent\", self._on_checkpoint_event)",
          ""
        ]
      },
      {
        "file": "backend/systems/storage/autosave_manager.py",
        "line": 156,
        "comment": "Emit checkpoint event",
        "full_line": "# TODO: Emit checkpoint event",
        "context": [
          "        # Save checkpoint metadata",
          "        await self.storage_manager.set(\"checkpoints/latest\", checkpoint_meta)",
          "",
          "        # TODO: Emit checkpoint event",
          "        # from backend.systems.events import EventDispatcher",
          "        # EventDispatcher.get_instance().publish({",
          "        #     \"type\": \"StorageEvent\","
        ]
      },
      {
        "file": "backend/systems/storage/autosave_manager.py",
        "line": 218,
        "comment": "Emit autosave event",
        "full_line": "# TODO: Emit autosave event",
        "context": [
          "        # Save autosave metadata",
          "        await self.storage_manager.set(\"autosaves/latest\", autosave_meta)",
          "",
          "        # TODO: Emit autosave event",
          "        # from backend.systems.events import EventDispatcher",
          "        # EventDispatcher.get_instance().publish({",
          "        #     \"type\": \"StorageEvent\","
        ]
      },
      {
        "file": "backend/systems/dialogue/poi_integration.py",
        "line": 31,
        "comment": "Implement actual POI retrieval",
        "full_line": "# TODO: Implement actual POI retrieval",
        "context": [
          "",
          "    def get_poi(self, poi_id: str):",
          "        \"\"\"Get a POI by ID. Stub implementation.\"\"\"",
          "        # TODO: Implement actual POI retrieval",
          "        return {",
          "            \"id\": poi_id,",
          "            \"name\": f\"POI {poi_id}\","
        ]
      },
      {
        "file": "backend/systems/dialogue/poi_integration.py",
        "line": 44,
        "comment": "Implement actual POI querying",
        "full_line": "# TODO: Implement actual POI querying",
        "context": [
          "",
          "    def query_pois(self, query):",
          "        \"\"\"Query POIs. Stub implementation.\"\"\"",
          "        # TODO: Implement actual POI querying",
          "        return []",
          "",
          "    def get_nearby_pois(self, **kwargs):"
        ]
      },
      {
        "file": "backend/systems/dialogue/poi_integration.py",
        "line": 49,
        "comment": "Implement actual nearby POI search",
        "full_line": "# TODO: Implement actual nearby POI search",
        "context": [
          "",
          "    def get_nearby_pois(self, **kwargs):",
          "        \"\"\"Get nearby POIs. Stub implementation.\"\"\"",
          "        # TODO: Implement actual nearby POI search",
          "        return []",
          "",
          "    def get_settlement(self, settlement_id: str):"
        ]
      },
      {
        "file": "backend/systems/dialogue/poi_integration.py",
        "line": 54,
        "comment": "Implement actual settlement retrieval",
        "full_line": "# TODO: Implement actual settlement retrieval",
        "context": [
          "",
          "    def get_settlement(self, settlement_id: str):",
          "        \"\"\"Get settlement info. Stub implementation.\"\"\"",
          "        # TODO: Implement actual settlement retrieval",
          "        return {",
          "            \"id\": settlement_id,",
          "            \"name\": f\"Settlement {settlement_id}\","
        ]
      },
      {
        "file": "backend/systems/dialogue/poi_integration.py",
        "line": 71,
        "comment": "Implement actual settlement POI retrieval",
        "full_line": "# TODO: Implement actual settlement POI retrieval",
        "context": [
          "",
          "    def get_settlement_pois(self, settlement_id: str):",
          "        \"\"\"Get POIs within a settlement. Stub implementation.\"\"\"",
          "        # TODO: Implement actual settlement POI retrieval",
          "        return []",
          "",
          ""
        ]
      },
      {
        "file": "backend/systems/poi/event_handlers.py",
        "line": 56,
        "comment": "Update POI models based on population changes if needed",
        "full_line": "# TODO: Update POI models based on population changes if needed",
        "context": [
          "            f\"Handling population change event for POI {event.location_id}: {event.old_population} \u2192 {event.new_population}\"",
          "        )",
          "",
          "        # TODO: Update POI models based on population changes if needed",
          "        # For now, just log the change",
          "        print(f\"Population change logged for POI {event.location_id}\")",
          ""
        ]
      },
      {
        "file": "backend/systems/poi/event_handlers.py",
        "line": 102,
        "comment": "Implement faction influence change handling",
        "full_line": "# TODO: Implement faction influence change handling",
        "context": [
          "",
          "def handle_faction_influence_change(event):",
          "    \"\"\"Handle faction influence change events (standalone function for test compatibility).\"\"\"",
          "    # TODO: Implement faction influence change handling",
          "    poi_id = getattr(event, \"poi_id\", getattr(event, \"location_id\", \"unknown\"))",
          "    print(f\"Handling faction influence change for POI {poi_id}\")",
          ""
        ]
      },
      {
        "file": "backend/systems/poi/event_handlers.py",
        "line": 109,
        "comment": "Implement war damage handling",
        "full_line": "# TODO: Implement war damage handling",
        "context": [
          "",
          "def handle_war_damage(event):",
          "    \"\"\"Handle war damage events (standalone function for test compatibility).\"\"\"",
          "    # TODO: Implement war damage handling",
          "    poi_id = getattr(event, \"poi_id\", getattr(event, \"location_id\", \"unknown\"))",
          "    print(f\"Handling war damage for POI {poi_id}\")",
          ""
        ]
      },
      {
        "file": "backend/systems/poi/event_handlers.py",
        "line": 116,
        "comment": "Implement resource change handling",
        "full_line": "# TODO: Implement resource change handling",
        "context": [
          "",
          "def handle_resource_change(event):",
          "    \"\"\"Handle resource change events (standalone function for test compatibility).\"\"\"",
          "    # TODO: Implement resource change handling",
          "    poi_id = getattr(event, \"poi_id\", getattr(event, \"location_id\", \"unknown\"))",
          "    print(f\"Handling resource change for POI {poi_id}\")"
        ]
      },
      {
        "file": "backend/systems/region/models.py",
        "line": 313,
        "comment": "Move these quest-related schemas to the quest system",
        "full_line": "# TODO: Move these quest-related schemas to the quest system",
        "context": [
          "    poi_ids: Optional[List[str]] = None",
          "",
          "",
          "# TODO: Move these quest-related schemas to the quest system",
          "class QuestSchema(BaseModel):",
          "    \"\"\"Schema for quests.\"\"\"",
          ""
        ]
      },
      {
        "file": "backend/systems/region/world_generator.py",
        "line": 365,
        "comment": "Implement minor POI generation",
        "full_line": "# TODO: Implement minor POI generation",
        "context": [
          "",
          "            pois.append(poi)",
          "",
          "        # TODO: Implement minor POI generation",
          "",
          "        return pois",
          ""
        ]
      },
      {
        "file": "backend/systems/region/router.py",
        "line": 30,
        "comment": "Move to quest system",
        "full_line": ")  # TODO: Move to quest system",
        "context": [
          ")",
          "from backend.systems.models import (",
          "    QuestlogEntrySchema,",
          ")  # TODO: Move to quest system",
          "from backend.systems.service import region_service, RegionService",
          "from backend.systems.world_state.utils.world_event_utils import log_world_event",
          "from backend.systems.character.npc.npc_rumor_utils import sync_event_beliefs"
        ]
      },
      {
        "file": "backend/systems/quest/npc_quests.py",
        "line": 315,
        "comment": "Get NPCs in region when NPCService supports it",
        "full_line": "# TODO: Get NPCs in region when NPCService supports it",
        "context": [
          "                raise ValidationError(\"Count must be at least 1\")",
          "",
          "            # Get NPCs in the region",
          "            # TODO: Get NPCs in region when NPCService supports it",
          "            # npcs = NPCManager.get_npcs_in_region(region_id)",
          "            npcs = []  # Placeholder until NPCService supports region queries",
          "            if not npcs:"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 65,
        "comment": "Implement ArcManager",
        "full_line": "# from backend.systems.quest.arc_manager import ArcManager  # TODO: Implement ArcManager",
        "context": [
          "from backend.systems.utils import QuestUtils, QuestValidator",
          "from backend.systems.generator import QuestGenerator",
          "",
          "# from backend.systems.quest.arc_manager import ArcManager  # TODO: Implement ArcManager",
          "# from backend.systems.quest.npc_quests import NPCQuestManager  # TODO: Implement NPCQuestManager",
          "from backend.systems.motif_integration import QuestMotifIntegration",
          ""
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 66,
        "comment": "Implement NPCQuestManager",
        "full_line": "# from backend.systems.quest.npc_quests import NPCQuestManager  # TODO: Implement NPCQuestManager",
        "context": [
          "from backend.systems.generator import QuestGenerator",
          "",
          "# from backend.systems.quest.arc_manager import ArcManager  # TODO: Implement ArcManager",
          "# from backend.systems.quest.npc_quests import NPCQuestManager  # TODO: Implement NPCQuestManager",
          "from backend.systems.motif_integration import QuestMotifIntegration",
          "",
          "# from backend.systems.quest.faction_integration import QuestFactionIntegration  # TODO: Implement"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 69,
        "comment": "Implement",
        "full_line": "# from backend.systems.quest.faction_integration import QuestFactionIntegration  # TODO: Implement",
        "context": [
          "# from backend.systems.quest.npc_quests import NPCQuestManager  # TODO: Implement NPCQuestManager",
          "from backend.systems.motif_integration import QuestMotifIntegration",
          "",
          "# from backend.systems.quest.faction_integration import QuestFactionIntegration  # TODO: Implement",
          "# from backend.systems.quest.system_hooks import QuestSystemHooks  # TODO: Implement",
          "",
          "logger = logging.getLogger(__name__)"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 70,
        "comment": "Implement",
        "full_line": "# from backend.systems.quest.system_hooks import QuestSystemHooks  # TODO: Implement",
        "context": [
          "from backend.systems.motif_integration import QuestMotifIntegration",
          "",
          "# from backend.systems.quest.faction_integration import QuestFactionIntegration  # TODO: Implement",
          "# from backend.systems.quest.system_hooks import QuestSystemHooks  # TODO: Implement",
          "",
          "logger = logging.getLogger(__name__)",
          "event_bus = get_event_dispatcher()"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 114,
        "comment": "Register faction event handlers when implemented",
        "full_line": "# TODO: Register faction event handlers when implemented",
        "context": [
          "            \"quest:completed\", QuestIntegration.handle_quest_completed_motif",
          "        )",
          "",
          "        # TODO: Register faction event handlers when implemented",
          "        # QuestFactionIntegration.register_event_handlers()",
          "",
          "        # TODO: Register system hooks with other game systems when implemented"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 117,
        "comment": "Register system hooks with other game systems when implemented",
        "full_line": "# TODO: Register system hooks with other game systems when implemented",
        "context": [
          "        # TODO: Register faction event handlers when implemented",
          "        # QuestFactionIntegration.register_event_handlers()",
          "",
          "        # TODO: Register system hooks with other game systems when implemented",
          "        # QuestSystemHooks.register_hooks()",
          "",
          "        logger.info(\"Quest event handlers registered\")"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 256,
        "comment": "Replace with actual item name lookup when item system is available",
        "full_line": "# TODO: Replace with actual item name lookup when item system is available",
        "context": [
          "                        updated = True",
          "",
          "                        # Generate a journal entry",
          "                        # TODO: Replace with actual item name lookup when item system is available",
          "                        item_name = f\"item_{item_id}\"",
          "                        journal_entry = {",
          "                            \"player_id\": player_id,"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 462,
        "comment": "Generate NPC quests when NPCQuestManager is implemented",
        "full_line": "# TODO: Generate NPC quests when NPCQuestManager is implemented",
        "context": [
          "                active_regions = WorldStateManager.get_active_regions()",
          "",
          "                for region_id in active_regions:",
          "                    # TODO: Generate NPC quests when NPCQuestManager is implemented",
          "                    # NPCQuestManager.generate_npc_quests_for_region(region_id, 2)",
          "                    pass",
          ""
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 580,
        "comment": "Get player data when PlayerManager is implemented",
        "full_line": "# TODO: Get player data when PlayerManager is implemented",
        "context": [
          "            # Validate player ID",
          "            QuestValidator.validate_player_id(player_id)",
          "",
          "            # TODO: Get player data when PlayerManager is implemented",
          "            # player_data = PlayerManager.get_player(player_id)",
          "            # For now, create a basic player data stub",
          "            player_data = {"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 608,
        "comment": "Get NPCs when NPCManager is implemented",
        "full_line": "# TODO: Get NPCs when NPCManager is implemented",
        "context": [
          "            quest_ids = []",
          "",
          "            # 1. Check for NPC quests in the area",
          "            # TODO: Get NPCs when NPCManager is implemented",
          "            # npcs = NPCManager.get_npcs_in_location(location_id)",
          "            npcs = []  # Placeholder until NPCManager is available",
          "            if npcs:"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 617,
        "comment": "Get NPC quests when NPCQuestManager is implemented",
        "full_line": "# TODO: Get NPC quests when NPCQuestManager is implemented",
        "context": [
          "                for npc in npcs:",
          "                    # Only NPCs with some importance might give quests",
          "                    if npc.get(\"importance\", 0) >= 2:",
          "                        # TODO: Get NPC quests when NPCQuestManager is implemented",
          "                        # npc_quests = NPCQuestManager.get_npc_quests(npc[\"id\"])",
          "                        npc_quests = []  # Placeholder",
          "                        available_quests = ["
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 641,
        "comment": "Assign quest to player when NPCQuestManager is implemented",
        "full_line": "# TODO: Assign quest to player when NPCQuestManager is implemented",
        "context": [
          "                    # Select a random quest from this NPC",
          "                    quest = random.choice(quests)",
          "",
          "                    # TODO: Assign quest to player when NPCQuestManager is implemented",
          "                    # updated_quest = NPCQuestManager.assign_quest_to_player(quest[\"id\"], player_id)",
          "                    updated_quest = quest  # Placeholder",
          "                    quest_ids.append(updated_quest[\"id\"])"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 718,
        "comment": "Check for active player arc when ArcManager is implemented",
        "full_line": "# TODO: Check for active player arc when ArcManager is implemented",
        "context": [
          "",
          "            # 3. Attempt to advance story arc if not enough quests were generated",
          "            if len(quest_ids) < count:",
          "                # TODO: Check for active player arc when ArcManager is implemented",
          "                # arc_data = ArcManager.load_player_arc(player_id)",
          "                arc_data = None  # Placeholder",
          ""
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 722,
        "comment": "Create a new arc if none exists when ArcManager is implemented",
        "full_line": "# TODO: Create a new arc if none exists when ArcManager is implemented",
        "context": [
          "                # arc_data = ArcManager.load_player_arc(player_id)",
          "                arc_data = None  # Placeholder",
          "",
          "                # TODO: Create a new arc if none exists when ArcManager is implemented",
          "                # if not arc_data:",
          "                #     arc_data = ArcManager.create_player_arc(player_id)",
          ""
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 728,
        "comment": "Create or ensure character arc exists when ArcManager is implemented",
        "full_line": "# TODO: Create or ensure character arc exists when ArcManager is implemented",
        "context": [
          "",
          "                # Use character background for themed quest if available",
          "                if player_data.get(\"background\"):",
          "                    # TODO: Create or ensure character arc exists when ArcManager is implemented",
          "                    # char_arc = ArcManager.generate_character_arc(player_id, player_data[\"background\"])",
          "                    char_arc = {",
          "                        \"current_chapter\": 0,"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 823,
        "comment": "Get active players when PlayerManager is implemented",
        "full_line": "# TODO: Get active players when PlayerManager is implemented",
        "context": [
          "",
          "            # When intensity grows significantly, generate new quests influenced by this motif",
          "            if new_intensity - old_intensity >= 2:",
          "                # TODO: Get active players when PlayerManager is implemented",
          "                players = []",
          "                if region_id:",
          "                    # TODO: Get players in this region when PlayerManager is implemented"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 826,
        "comment": "Get players in this region when PlayerManager is implemented",
        "full_line": "# TODO: Get players in this region when PlayerManager is implemented",
        "context": [
          "                # TODO: Get active players when PlayerManager is implemented",
          "                players = []",
          "                if region_id:",
          "                    # TODO: Get players in this region when PlayerManager is implemented",
          "                    # players = PlayerManager.get_players_in_region(region_id)",
          "                    players = []  # Placeholder",
          "                else:"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 830,
        "comment": "Get all active players when PlayerManager is implemented",
        "full_line": "# TODO: Get all active players when PlayerManager is implemented",
        "context": [
          "                    # players = PlayerManager.get_players_in_region(region_id)",
          "                    players = []  # Placeholder",
          "                else:",
          "                    # TODO: Get all active players when PlayerManager is implemented",
          "                    # players = PlayerManager.get_all_active_players()",
          "                    players = []  # Placeholder",
          ""
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 884,
        "comment": "Update regional arc when ArcManager is implemented",
        "full_line": "# TODO: Update regional arc when ArcManager is implemented",
        "context": [
          "                logger.warning(\"Missing required data in regional_motif_shift event\")",
          "                return",
          "",
          "            # TODO: Update regional arc when ArcManager is implemented",
          "            # arc_manager = ArcManager()",
          "            # arc_manager.update_regional_arc_motif(region_id, new_motif)",
          ""
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 888,
        "comment": "Generate quests for players when PlayerManager is implemented",
        "full_line": "# TODO: Generate quests for players when PlayerManager is implemented",
        "context": [
          "            # arc_manager = ArcManager()",
          "            # arc_manager.update_regional_arc_motif(region_id, new_motif)",
          "",
          "            # TODO: Generate quests for players when PlayerManager is implemented",
          "            # players_in_region = PlayerManager.get_players_in_region(region_id)",
          "            players_in_region = []  # Placeholder",
          "            for player in players_in_region:"
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 937,
        "comment": "Update global arc when ArcManager is implemented",
        "full_line": "# TODO: Update global arc when ArcManager is implemented",
        "context": [
          "                logger.warning(\"Missing required data in global_motif_shift event\")",
          "                return",
          "",
          "            # TODO: Update global arc when ArcManager is implemented",
          "            # arc_manager = ArcManager()",
          "            # arc_manager.update_global_arc_motif(new_motif)",
          ""
        ]
      },
      {
        "file": "backend/systems/quest/core/integration.py",
        "line": 941,
        "comment": "Generate quests for players when PlayerManager is implemented",
        "full_line": "# TODO: Generate quests for players when PlayerManager is implemented",
        "context": [
          "            # arc_manager = ArcManager()",
          "            # arc_manager.update_global_arc_motif(new_motif)",
          "",
          "            # TODO: Generate quests for players when PlayerManager is implemented",
          "            # active_players = PlayerManager.get_all_active_players()",
          "            active_players = []  # Placeholder",
          "            # Take only 10% of players (with a minimum of 1)"
        ]
      },
      {
        "file": "backend/systems/world_state/utils/world_event_utils.py",
        "line": 200,
        "comment": "This function needs to be updated to work with the new consolidated motif system",
        "full_line": "# TODO: This function needs to be updated to work with the new consolidated motif system",
        "context": [
          "",
          "        motif_manager = get_motif_manager()",
          "",
          "        # TODO: This function needs to be updated to work with the new consolidated motif system",
          "        # For now, we'll create a placeholder chaos event",
          "",
          "        chaos_type = roll_chaos_event()"
        ]
      },
      {
        "file": "backend/systems/world_state/utils/tick_utils.py",
        "line": 217,
        "comment": "Implement NPC behavior",
        "full_line": "# TODO: Implement NPC behavior",
        "context": [
          "",
          "def process_npc_actions(npc: NPC):",
          "    \"\"\"Process actions for a single NPC.\"\"\"",
          "    # TODO: Implement NPC behavior",
          "    pass",
          "",
          ""
        ]
      },
      {
        "file": "backend/systems/world_state/utils/tick_utils.py",
        "line": 419,
        "comment": "Implement these functions",
        "full_line": "# TODO: Implement these functions",
        "context": [
          "def process_region_changes(region: Region):",
          "    \"\"\"Process changes for a single region.\"\"\"",
          "    try:",
          "        # TODO: Implement these functions",
          "        # process_population_changes(region)",
          "        # process_resource_changes(region)",
          "        # process_building_changes(region)"
        ]
      },
      {
        "file": "backend/systems/world_state/mods/synchronizers/state_synchronizer.py",
        "line": 480,
        "comment": "Add more validation for regions, factions, and NPCs",
        "full_line": "# TODO: Add more validation for regions, factions, and NPCs",
        "context": [
          "                logger.warning(f\"Invalid state change in mod '{mod['id']}'\")",
          "                return False",
          "",
          "        # TODO: Add more validation for regions, factions, and NPCs",
          "",
          "        return True",
          ""
        ]
      },
      {
        "file": "backend/systems/world_state/api/router.py",
        "line": 225,
        "comment": "Implement more sophisticated filtering",
        "full_line": "# TODO: Implement more sophisticated filtering",
        "context": [
          "    elif location:",
          "        events = filter_events_by_location(location, limit=limit)",
          "    else:",
          "        # TODO: Implement more sophisticated filtering",
          "        # For now, just return an empty list",
          "        events = []",
          ""
        ]
      },
      {
        "file": "backend/systems/arc/__init__.py",
        "line": 137,
        "comment": "Create database-backed repositories",
        "full_line": "# TODO: Create database-backed repositories",
        "context": [
          "        progression_repo = MemoryProgressionRepository()",
          "        integration_repo = MemoryIntegrationRepository()",
          "    else:",
          "        # TODO: Create database-backed repositories",
          "        raise NotImplementedError(\"Database repositories not yet implemented\")",
          "",
          "    # Create services"
        ]
      },
      {
        "file": "backend/systems/arc/models/arc_step.py",
        "line": 193,
        "comment": "Check actual prerequisite completion",
        "full_line": "len(self.prerequisite_steps) == 0  # TODO: Check actual prerequisite completion",
        "context": [
          "        \"\"\"Check if step prerequisites are met\"\"\"",
          "        return (",
          "            self.status in [ArcStepStatus.PENDING, ArcStepStatus.AVAILABLE] and",
          "            len(self.prerequisite_steps) == 0  # TODO: Check actual prerequisite completion",
          "        )",
          "",
          "    def start_attempt(self) -> None:"
        ]
      },
      {
        "file": "backend/systems/arc/services/arc_generator.py",
        "line": 27,
        "comment": "Replace with actual GPT client",
        "full_line": "def __init__(self, gpt_client=None):  # TODO: Replace with actual GPT client",
        "context": [
          "class ArcGenerator:",
          "    \"\"\"Service for AI-powered arc and step generation\"\"\"",
          "",
          "    def __init__(self, gpt_client=None):  # TODO: Replace with actual GPT client",
          "        self.gpt_client = gpt_client",
          "",
          "        # Arc type-specific generation parameters"
        ]
      },
      {
        "file": "backend/systems/arc/services/arc_generator.py",
        "line": 335,
        "comment": "Implement actual GPT API call",
        "full_line": "# TODO: Implement actual GPT API call",
        "context": [
          "",
          "    async def _call_gpt_for_arc(self, prompt: str) -> Optional[str]:",
          "        \"\"\"Call GPT API for arc generation\"\"\"",
          "        # TODO: Implement actual GPT API call",
          "        # This is a placeholder that would integrate with your GPT client",
          "",
          "        if not self.gpt_client:"
        ]
      },
      {
        "file": "backend/systems/arc/services/arc_generator.py",
        "line": 352,
        "comment": "Implement actual GPT API call",
        "full_line": "# TODO: Implement actual GPT API call",
        "context": [
          "",
          "    async def _call_gpt_for_steps(self, prompt: str) -> Optional[str]:",
          "        \"\"\"Call GPT API for step generation\"\"\"",
          "        # TODO: Implement actual GPT API call",
          "",
          "        if not self.gpt_client:",
          "            logger.warning(\"No GPT client configured - using placeholder response\")"
        ]
      },
      {
        "file": "backend/systems/arc/services/arc_generator.py",
        "line": 369,
        "comment": "Implement robust JSON parsing with error handling",
        "full_line": "# TODO: Implement robust JSON parsing with error handling",
        "context": [
          "    def _parse_arc_response(self, response: str, arc_type: ArcType, context: Dict[str, Any]) -> Optional[Dict[str, Any]]:",
          "        \"\"\"Parse GPT response into arc data\"\"\"",
          "        try:",
          "            # TODO: Implement robust JSON parsing with error handling",
          "            arc_data = json.loads(response)",
          "",
          "            # Add required fields"
        ]
      },
      {
        "file": "backend/systems/arc/services/arc_generator.py",
        "line": 392,
        "comment": "Implement robust JSON parsing",
        "full_line": "# TODO: Implement robust JSON parsing",
        "context": [
          "    def _parse_steps_response(self, response: str, arc_id: UUID, start_index: int = 0) -> List[ArcStep]:",
          "        \"\"\"Parse GPT response into arc steps\"\"\"",
          "        try:",
          "            # TODO: Implement robust JSON parsing",
          "            steps_data = json.loads(response)",
          "            steps = []",
          ""
        ]
      },
      {
        "file": "backend/systems/arc/services/quest_integration.py",
        "line": 47,
        "comment": "This would query the step repository for available steps",
        "full_line": "# TODO: This would query the step repository for available steps",
        "context": [
          "            candidates = []",
          "",
          "            # Get all active arc steps that could generate quests",
          "            # TODO: This would query the step repository for available steps",
          "            available_steps = await self._get_available_arc_steps()",
          "",
          "            for step in available_steps:"
        ]
      },
      {
        "file": "backend/systems/arc/services/quest_integration.py",
        "line": 116,
        "comment": "Implement quest-to-mapping lookup",
        "full_line": "# TODO: Implement quest-to-mapping lookup",
        "context": [
          "            affected_arcs = []",
          "",
          "            # Find quest mappings that reference this quest",
          "            # TODO: Implement quest-to-mapping lookup",
          "            mappings = await self._get_mappings_by_quest_id(quest_id)",
          "",
          "            for mapping in mappings:"
        ]
      },
      {
        "file": "backend/systems/arc/services/quest_integration.py",
        "line": 144,
        "comment": "Query step repository",
        "full_line": "# TODO: Query step repository",
        "context": [
          "            opportunities = []",
          "",
          "            # Get arc steps",
          "            # TODO: Query step repository",
          "            steps = await self._get_arc_steps(arc_id)",
          "",
          "            for step in steps:"
        ]
      },
      {
        "file": "backend/systems/arc/services/quest_integration.py",
        "line": 244,
        "comment": "Implement proper location proximity checking",
        "full_line": "# TODO: Implement proper location proximity checking",
        "context": [
          "",
          "    def _is_location_nearby(self, tag_location: str, context_location: str) -> bool:",
          "        \"\"\"Check if locations are nearby (placeholder implementation)\"\"\"",
          "        # TODO: Implement proper location proximity checking",
          "        # This would integrate with the location/region system",
          "        return tag_location == context_location",
          ""
        ]
      },
      {
        "file": "backend/systems/arc/services/quest_integration.py",
        "line": 289,
        "comment": "Integrate with the actual quest generation system",
        "full_line": "# TODO: Integrate with the actual quest generation system",
        "context": [
          "        mapping: ArcQuestMapping",
          "    ) -> Optional[str]:",
          "        \"\"\"Generate the actual quest (placeholder implementation)\"\"\"",
          "        # TODO: Integrate with the actual quest generation system",
          "",
          "        logger.info(f\"Generating quest for arc step: {step.title}\")",
          "        logger.debug(f\"Quest context: {context}\")"
        ]
      },
      {
        "file": "backend/systems/arc/services/quest_integration.py",
        "line": 307,
        "comment": "Implement actual repository query",
        "full_line": "# TODO: Implement actual repository query",
        "context": [
          "",
          "    async def _get_available_arc_steps(self) -> List[ArcStep]:",
          "        \"\"\"Get all available arc steps (placeholder)\"\"\"",
          "        # TODO: Implement actual repository query",
          "        return []",
          "",
          "    async def _get_arc_steps(self, arc_id: UUID) -> List[ArcStep]:"
        ]
      },
      {
        "file": "backend/systems/arc/services/quest_integration.py",
        "line": 312,
        "comment": "Implement actual repository query",
        "full_line": "# TODO: Implement actual repository query",
        "context": [
          "",
          "    async def _get_arc_steps(self, arc_id: UUID) -> List[ArcStep]:",
          "        \"\"\"Get steps for a specific arc (placeholder)\"\"\"",
          "        # TODO: Implement actual repository query",
          "        return []",
          "",
          "    async def _get_mappings_by_quest_id(self, quest_id: str) -> List[ArcQuestMapping]:"
        ]
      },
      {
        "file": "backend/systems/arc/services/quest_integration.py",
        "line": 317,
        "comment": "Implement actual repository query",
        "full_line": "# TODO: Implement actual repository query",
        "context": [
          "",
          "    async def _get_mappings_by_quest_id(self, quest_id: str) -> List[ArcQuestMapping]:",
          "        \"\"\"Get quest mappings by quest ID (placeholder)\"\"\"",
          "        # TODO: Implement actual repository query",
          "        return []"
        ]
      },
      {
        "file": "backend/systems/arc/services/arc_manager.py",
        "line": 253,
        "comment": "Save completion record when repository is implemented",
        "full_line": "# TODO: Save completion record when repository is implemented",
        "context": [
          "",
          "            # Save updates",
          "            await self.arc_repo.update(arc)",
          "            # TODO: Save completion record when repository is implemented",
          "",
          "            logger.info(f\"Completed arc {arc_id} with result: {completion_result}\")",
          "            return completion_record"
        ]
      },
      {
        "file": "backend/systems/data/events/data_events.py",
        "line": 86,
        "comment": "Connect to actual event dispatcher",
        "full_line": "# TODO: Connect to actual event dispatcher",
        "context": [
          "    Args:",
          "        event: The data event to publish",
          "    \"\"\"",
          "    # TODO: Connect to actual event dispatcher",
          "    print(f\"Publishing data event: {event}\")",
          "",
          ""
        ]
      }
    ],
    "deprecated_functions": [
      {
        "file": "backend/systems/remove_deprecated_utils.py",
        "line": 15,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "DEPRECATED_UTILS_DIR = \"backend/systems/utils\"",
        "context": [
          "",
          "# Directory to remove",
          "DEPRECATED_UTILS_DIR = \"backend/systems/utils\"",
          "",
          ""
        ]
      },
      {
        "file": "backend/systems/verify_utils_imports.py",
        "line": 42,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "deprecated_imports = []",
        "context": [
          "        list: List of deprecated import lines found",
          "    \"\"\"",
          "    deprecated_imports = []",
          "",
          "    try:"
        ]
      },
      {
        "file": "backend/systems/verify_utils_imports.py",
        "line": 72,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "total_deprecated_imports = 0",
        "context": [
          "    print(f\"Found {len(python_files)} Python files to check.\")",
          "",
          "    total_deprecated_imports = 0",
          "    files_with_deprecated_imports = {}",
          ""
        ]
      },
      {
        "file": "backend/systems/verify_utils_imports.py",
        "line": 73,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "files_with_deprecated_imports = {}",
        "context": [
          "",
          "    total_deprecated_imports = 0",
          "    files_with_deprecated_imports = {}",
          "",
          "    for file_path in python_files:"
        ]
      },
      {
        "file": "backend/systems/verify_utils_imports.py",
        "line": 76,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "deprecated_imports = check_imports_in_file(file_path)",
        "context": [
          "",
          "    for file_path in python_files:",
          "        deprecated_imports = check_imports_in_file(file_path)",
          "",
          "        if deprecated_imports:"
        ]
      },
      {
        "file": "backend/systems/verify_utils_imports.py",
        "line": 79,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "files_with_deprecated_imports[file_path] = deprecated_imports",
        "context": [
          "",
          "        if deprecated_imports:",
          "            files_with_deprecated_imports[file_path] = deprecated_imports",
          "            total_deprecated_imports += len(deprecated_imports)",
          ""
        ]
      },
      {
        "file": "backend/systems/verify_utils_imports.py",
        "line": 80,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "total_deprecated_imports += len(deprecated_imports)",
        "context": [
          "        if deprecated_imports:",
          "            files_with_deprecated_imports[file_path] = deprecated_imports",
          "            total_deprecated_imports += len(deprecated_imports)",
          "",
          "    # Print report"
        ]
      },
      {
        "file": "backend/systems/combat/combat_ram.py",
        "line": 166,
        "pattern": "#.*deprecated",
        "description": "Deprecated comment",
        "full_line": "# This will be deprecated in future versions",
        "context": [
          "",
          "# For backwards compatibility, maintain the ACTIVE_BATTLES global variable",
          "# This will be deprecated in future versions",
          "ACTIVE_BATTLES = combat_state_manager._active_battles",
          ""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 83,
        "pattern": "@deprecated",
        "description": "Deprecated decorator usage",
        "full_line": "@deprecated(replacement_func=apply_full_damage_calculation)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=apply_full_damage_calculation)",
          "def calculate_damage(attacker, defender, skill, **kwargs):",
          "    \"\"\"Legacy damage calculation function.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 107,
        "pattern": "@deprecated",
        "description": "Deprecated decorator usage",
        "full_line": "@deprecated(replacement_func=resolve_combat_action)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=resolve_combat_action)",
          "def apply_damage(attacker, defender, damage, combat_state=None, **kwargs):",
          "    \"\"\"Legacy function to apply damage to a defender.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 122,
        "pattern": "@deprecated",
        "description": "Deprecated decorator usage",
        "full_line": "@deprecated(replacement_func=is_attack_successful)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=is_attack_successful)",
          "def check_hit(attacker, defender, **kwargs):",
          "    \"\"\"Legacy function to check if an attack hits.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 136,
        "pattern": "@deprecated",
        "description": "Deprecated decorator usage",
        "full_line": "@deprecated(replacement_func=apply_status_effect)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=apply_status_effect)",
          "def apply_effect(source, target, effect_name, duration=3, **kwargs):",
          "    \"\"\"Legacy function to apply an effect.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 161,
        "pattern": "@deprecated",
        "description": "Deprecated decorator usage",
        "full_line": "@deprecated(replacement_func=process_status_effects)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=process_status_effects)",
          "def process_effects(combat_state, **kwargs):",
          "    \"\"\"Legacy function to process all effects in a combat state.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 180,
        "pattern": "@deprecated",
        "description": "Deprecated decorator usage",
        "full_line": "@deprecated(replacement_func=has_effect)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=has_effect)",
          "def has_status_effect(target, effect_name, **kwargs):",
          "    \"\"\"Legacy function to check if a target has a status effect.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 199,
        "pattern": "@deprecated",
        "description": "Deprecated decorator usage",
        "full_line": "@deprecated(replacement_func=get_effect)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=get_effect)",
          "def get_status_effect(target, effect_name, **kwargs):",
          "    \"\"\"Legacy function to get a status effect from a target.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 218,
        "pattern": "@deprecated",
        "description": "Deprecated decorator usage",
        "full_line": "@deprecated(replacement_func=remove_status_effect)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=remove_status_effect)",
          "def remove_effect(target, effect_name, **kwargs):",
          "    \"\"\"Legacy function to remove a status effect from a target.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 44,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "def deprecated(replacement_func=None):",
        "context": [
          "",
          "",
          "def deprecated(replacement_func=None):",
          "    \"\"\"",
          "    Decorator to mark functions as deprecated."
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 83,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "@deprecated(replacement_func=apply_full_damage_calculation)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=apply_full_damage_calculation)",
          "def calculate_damage(attacker, defender, skill, **kwargs):",
          "    \"\"\"Legacy damage calculation function.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 107,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "@deprecated(replacement_func=resolve_combat_action)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=resolve_combat_action)",
          "def apply_damage(attacker, defender, damage, combat_state=None, **kwargs):",
          "    \"\"\"Legacy function to apply damage to a defender.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 122,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "@deprecated(replacement_func=is_attack_successful)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=is_attack_successful)",
          "def check_hit(attacker, defender, **kwargs):",
          "    \"\"\"Legacy function to check if an attack hits.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 136,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "@deprecated(replacement_func=apply_status_effect)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=apply_status_effect)",
          "def apply_effect(source, target, effect_name, duration=3, **kwargs):",
          "    \"\"\"Legacy function to apply an effect.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 161,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "@deprecated(replacement_func=process_status_effects)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=process_status_effects)",
          "def process_effects(combat_state, **kwargs):",
          "    \"\"\"Legacy function to process all effects in a combat state.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 180,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "@deprecated(replacement_func=has_effect)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=has_effect)",
          "def has_status_effect(target, effect_name, **kwargs):",
          "    \"\"\"Legacy function to check if a target has a status effect.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 199,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "@deprecated(replacement_func=get_effect)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=get_effect)",
          "def get_status_effect(target, effect_name, **kwargs):",
          "    \"\"\"Legacy function to get a status effect from a target.\"\"\""
        ]
      },
      {
        "file": "backend/systems/combat/legacy_adapter.py",
        "line": 218,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "@deprecated(replacement_func=remove_status_effect)",
        "context": [
          "",
          "",
          "@deprecated(replacement_func=remove_status_effect)",
          "def remove_effect(target, effect_name, **kwargs):",
          "    \"\"\"Legacy function to remove a status effect from a target.\"\"\""
        ]
      },
      {
        "file": "backend/systems/auth_user/services/auth_service.py",
        "line": 53,
        "pattern": "DEPRECATED.*=",
        "description": "Deprecated constant",
        "full_line": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")",
        "context": [
          "# Use a try-except block for importing pwd_context",
          "try:",
          "    pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")",
          "except ImportError:",
          "    # If passlib or bcrypt is not available, use a fallback"
        ]
      },
      {
        "file": "backend/systems/population/events.py",
        "line": 252,
        "pattern": "#.*deprecated",
        "description": "Deprecated comment",
        "full_line": "# Backward compatibility aliases - these will be deprecated in a future release",
        "context": [
          "",
          "",
          "# Backward compatibility aliases - these will be deprecated in a future release",
          "PopulationEvent = PopulationEventBase",
          "PopulationChangedEvent = PopulationChangedEventData"
        ]
      }
    ],
    "unused_imports": [
      {
        "file": "backend/systems/quest/system_hooks.py",
        "unused_imports": [
          "backend.systems.population.population_service",
          "backend.systems.motif_integration.QuestMotifIntegration"
        ]
      },
      {
        "file": "backend/systems/quest/integrations/motif_integration.py",
        "unused_imports": [
          "__future__.annotations",
          "typing.Union",
          "typing.Tuple",
          "dataclasses.dataclass",
          "dataclasses.field",
          "datetime.datetime",
          "datetime.timedelta",
          "pathlib.Path",
          "abc.ABC",
          "abc.abstractmethod",
          "backend.systems.shared.utils.base.base_manager.BaseManager",
          "backend.systems.events.EventDispatcher",
          "backend.systems.events.Event"
        ]
      },
      {
        "file": "backend/systems/world_state/optimized_worldgen.py",
        "unused_imports": [
          "numpy"
        ]
      },
      {
        "file": "backend/systems/events/__init__.py",
        "unused_imports": [
          "typing.List"
        ]
      },
      {
        "file": "backend/systems/equipment/set_bonus_utils.py",
        "unused_imports": [
          "backend.systems.inventory.models.Item"
        ]
      },
      {
        "file": "backend/systems/equipment/identify_item_utils.py",
        "unused_imports": [
          "backend.systems.economy.models.MetricType"
        ]
      },
      {
        "file": "backend/systems/equipment/durability_utils.py",
        "unused_imports": [
          "backend.systems.inventory.models.Item",
          "backend.systems.inventory.models.InventoryItem"
        ]
      },
      {
        "file": "backend/systems/equipment/inventory_utils.py",
        "unused_imports": [
          "backend.systems.inventory.utils.InventoryUtils",
          "backend.systems.inventory.validator.InventoryValidator"
        ]
      }
    ],
    "duplicate_implementations": [
      {
        "signature": "main(0)",
        "files": [
          "backend/systems/remove_deprecated_utils.py",
          "backend/systems/fix_poi_imports.py"
        ],
        "function_name": "main"
      },
      {
        "signature": "main(0)",
        "files": [
          "backend/systems/remove_deprecated_utils.py",
          "backend/systems/verify_utils_imports.py"
        ],
        "function_name": "main"
      },
      {
        "signature": "find_python_files(1)",
        "files": [
          "backend/systems/verify_utils_imports.py",
          "backend/systems/fix_utils_imports.py"
        ],
        "function_name": "find_python_files"
      },
      {
        "signature": "main(0)",
        "files": [
          "backend/systems/remove_deprecated_utils.py",
          "backend/systems/fix_utils_imports.py"
        ],
        "function_name": "main"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/repositories/economy_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_price_modifier(2)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/market.py"
        ],
        "function_name": "get_price_modifier"
      },
      {
        "signature": "set_price_modifier(3)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/market.py"
        ],
        "function_name": "set_price_modifier"
      },
      {
        "signature": "update_supply_demand(4)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/market.py"
        ],
        "function_name": "update_supply_demand"
      },
      {
        "signature": "record_trade(3)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/market.py"
        ],
        "function_name": "record_trade"
      },
      {
        "signature": "dict(1)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/resource.py"
        ],
        "function_name": "dict"
      },
      {
        "signature": "to_data_model(1)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/resource.py"
        ],
        "function_name": "to_data_model"
      },
      {
        "signature": "from_data_model(2)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/resource.py"
        ],
        "function_name": "from_data_model"
      },
      {
        "signature": "dict(1)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/trade_route.py"
        ],
        "function_name": "dict"
      },
      {
        "signature": "to_data_model(1)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/trade_route.py"
        ],
        "function_name": "to_data_model"
      },
      {
        "signature": "from_data_model(2)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/economy/models/trade_route.py"
        ],
        "function_name": "from_data_model"
      },
      {
        "signature": "get_trade_route(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/trade_service.py"
        ],
        "function_name": "get_trade_route"
      },
      {
        "signature": "create_trade_route(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/trade_service.py"
        ],
        "function_name": "create_trade_route"
      },
      {
        "signature": "update_trade_route(3)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/trade_service.py"
        ],
        "function_name": "update_trade_route"
      },
      {
        "signature": "delete_trade_route(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/trade_service.py"
        ],
        "function_name": "delete_trade_route"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/economy/services/economy_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_resource(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "get_resource"
      },
      {
        "signature": "get_resources_by_region(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "get_resources_by_region"
      },
      {
        "signature": "create_resource(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "create_resource"
      },
      {
        "signature": "update_resource(3)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "update_resource"
      },
      {
        "signature": "delete_resource(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "delete_resource"
      },
      {
        "signature": "adjust_resource_amount(3)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "adjust_resource_amount"
      },
      {
        "signature": "transfer_resource(5)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "transfer_resource"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "process_economic_event(5)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/resource_service.py"
        ],
        "function_name": "process_economic_event"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/economy/services/market_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_market(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/market_service.py"
        ],
        "function_name": "get_market"
      },
      {
        "signature": "get_markets_by_region(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/market_service.py"
        ],
        "function_name": "get_markets_by_region"
      },
      {
        "signature": "create_market(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/market_service.py"
        ],
        "function_name": "create_market"
      },
      {
        "signature": "calculate_price(4)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/market_service.py"
        ],
        "function_name": "calculate_price"
      },
      {
        "signature": "calculate_price_index(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/market_service.py"
        ],
        "function_name": "calculate_price_index"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/economy/services/market_service.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_future(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/futures_service.py"
        ],
        "function_name": "get_future"
      },
      {
        "signature": "create_future(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/futures_service.py"
        ],
        "function_name": "create_future"
      },
      {
        "signature": "settle_future(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/economy/services/futures_service.py"
        ],
        "function_name": "settle_future"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/economy/services/futures_service.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/motif/models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_motif_manager(0)",
        "files": [
          "backend/systems/motif/__init__.py",
          "backend/systems/motif/router.py"
        ],
        "function_name": "get_motif_manager"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/motif/repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/motif/managers/lifecycle_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/motif/managers/motif_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/motif/managers/motif_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/language_generator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "add_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "add_middleware"
      },
      {
        "signature": "remove_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "remove_middleware"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/core/motif_system.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/motif_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/motif_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/core/gpt_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/core/gpt_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/gpt_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/core/gpt_integration.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/core/gpt_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/gpt_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_verify_compatibility(0)",
        "files": [
          "backend/systems/motif/utils.py",
          "backend/systems/llm/core/dm_core.py"
        ],
        "function_name": "_verify_compatibility"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/llm/core/core/dialogue_manager.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/core/faction/faction_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/faction/faction_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/core/faction/faction_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/repositories/region_repository.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/repositories/region_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/repositories/region_repository.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/repositories/motif_repository.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/repositories/motif_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_motif(2)",
        "files": [
          "backend/systems/llm/core/motif_system.py",
          "backend/systems/llm/repositories/motif_repository.py"
        ],
        "function_name": "get_motif"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/repositories/motif_repository.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/repositories/rumor_repository.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/repositories/rumor_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/repositories/rumor_repository.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/repositories/player_repository.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/repositories/player_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/repositories/player_repository.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/repositories/world_repository.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/repositories/world_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/repositories/world_repository.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/repositories/faction_repository.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/repositories/faction_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_faction_conflicts(1)",
        "files": [
          "backend/systems/llm/core/faction/faction_manager.py",
          "backend/systems/llm/repositories/faction_repository.py"
        ],
        "function_name": "get_faction_conflicts"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/repositories/faction_repository.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/repositories/npc_repository.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/llm/repositories/npc_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_active_motifs(2)",
        "files": [
          "backend/systems/llm/repositories/player_repository.py",
          "backend/systems/llm/repositories/npc_repository.py"
        ],
        "function_name": "get_active_motifs"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/llm/repositories/npc_repository.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/llm/services/gpt_client.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "get_current_user(0)",
        "files": [
          "backend/systems/economy/routers/shop_router.py",
          "backend/systems/tension_war/routers/tension_router.py"
        ],
        "function_name": "get_current_user"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/tension_war/utils/tension_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/tension_war/utils/alliance_utils.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/tension_war/services/proxy_war_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/tension_war/services/diplomatic_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/tension_war/services/tension_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_tension(2)",
        "files": [
          "backend/systems/llm/repositories/region_repository.py",
          "backend/systems/tension_war/services/tension_manager.py"
        ],
        "function_name": "get_tension"
      },
      {
        "signature": "decay_tension(3)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/tension_war/services/tension_manager.py"
        ],
        "function_name": "decay_tension"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/tension_war/services/war_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/tension_war/services/alliance_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/tension_war/services/peace_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "evaluate_peace_offer(4)",
        "files": [
          "backend/systems/tension_war/utils/peace_utils.py",
          "backend/systems/tension_war/services/peace_manager.py"
        ],
        "function_name": "evaluate_peace_offer"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_generation/config.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_generation/config.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_generation/config.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/config.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_generation/config.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_generation/config.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/world_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/world_generation/world_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "create_new_region(3)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_manager.py"
        ],
        "function_name": "create_new_region"
      },
      {
        "signature": "create_new_region(3)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_manager.py"
        ],
        "function_name": "create_new_region"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/settlement_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__new__(1)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "__new__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "initialize_world(3)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "initialize_world"
      },
      {
        "signature": "generate_world(2)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "generate_world"
      },
      {
        "signature": "generate_continent(6)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "generate_continent"
      },
      {
        "signature": "_generate_regions_for_continent(2)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_generate_regions_for_continent"
      },
      {
        "signature": "_generate_rivers_for_continent(2)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_generate_rivers_for_continent"
      },
      {
        "signature": "_generate_settlements_for_continent(2)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_generate_settlements_for_continent"
      },
      {
        "signature": "_generate_features_for_continent(2)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_generate_features_for_continent"
      },
      {
        "signature": "_generate_world_oceans(1)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_generate_world_oceans"
      },
      {
        "signature": "_generate_climate_zones(1)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_generate_climate_zones"
      },
      {
        "signature": "_collect_all_regions(1)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_collect_all_regions"
      },
      {
        "signature": "_get_continent_by_id(2)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_get_continent_by_id"
      },
      {
        "signature": "_save_world_data(1)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "_save_world_data"
      },
      {
        "signature": "load_world(2)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "load_world"
      },
      {
        "signature": "export_world(3)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "export_world"
      },
      {
        "signature": "create_new_region(3)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "create_new_region"
      },
      {
        "signature": "create_new_region(3)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/world_generator.py"
        ],
        "function_name": "create_new_region"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/world_generation/biome_utils.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/world_generation/continent_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "list_all_continents(1)",
        "files": [
          "backend/systems/world_generation/continent_repository.py",
          "backend/systems/world_generation/continent_service.py"
        ],
        "function_name": "list_all_continents"
      },
      {
        "signature": "delete_continent(2)",
        "files": [
          "backend/systems/world_generation/continent_repository.py",
          "backend/systems/world_generation/continent_service.py"
        ],
        "function_name": "delete_continent"
      },
      {
        "signature": "create_new_region(3)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/continent_service.py"
        ],
        "function_name": "create_new_region"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/world_generation/continent_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/world_generation/modding_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/modding_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_load_schemas(1)",
        "files": [
          "backend/systems/world_generation/modding_system.py",
          "backend/systems/world_generation/modding_system.py"
        ],
        "function_name": "_load_schemas"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/modding_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/world_generation/modding_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "save_world_seed(2)",
        "files": [
          "backend/systems/world_generation/modding_system.py",
          "backend/systems/world_generation/modding_system.py"
        ],
        "function_name": "save_world_seed"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/modding_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "save_world_seed(2)",
        "files": [
          "backend/systems/world_generation/modding_system.py",
          "backend/systems/world_generation/modding_system.py"
        ],
        "function_name": "save_world_seed"
      },
      {
        "signature": "save_world(2)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/world_generation/api.py"
        ],
        "function_name": "save_world"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/world_generation/world_generation_utils.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/river_generator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "generate_rivers_for_region(2)",
        "files": [
          "backend/systems/world_generation/river_generator.py",
          "backend/systems/world_generation/river_generator.py"
        ],
        "function_name": "generate_rivers_for_region"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "execute(2)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "execute"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "execute(2)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "execute"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "execute(2)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "execute"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "execute(2)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "execute"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "execute(2)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "execute"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_generation/components.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "load_world_seed(2)",
        "files": [
          "backend/systems/world_generation/modding_system.py",
          "backend/systems/world_generation/seed_loader.py"
        ],
        "function_name": "load_world_seed"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/regional_features.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_get_region_by_id(2)",
        "files": [
          "backend/systems/world_generation/settlement_service.py",
          "backend/systems/world_generation/regional_features.py"
        ],
        "function_name": "_get_region_by_id"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_generation/biomes/biome_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "walk_region(3)",
        "files": [
          "backend/systems/world_generation/world_utils.py",
          "backend/systems/world_generation/generators/terrain_generator.py"
        ],
        "function_name": "walk_region"
      },
      {
        "signature": "choose_poi_type(1)",
        "files": [
          "backend/systems/world_generation/world_utils.py",
          "backend/systems/world_generation/generators/terrain_generator.py"
        ],
        "function_name": "choose_poi_type"
      },
      {
        "signature": "pick_valid_tile(6)",
        "files": [
          "backend/systems/world_generation/world_utils.py",
          "backend/systems/world_generation/generators/terrain_generator.py"
        ],
        "function_name": "pick_valid_tile"
      },
      {
        "signature": "claim_region_hexes_for_city(3)",
        "files": [
          "backend/systems/world_generation/world_utils.py",
          "backend/systems/world_generation/generators/terrain_generator.py"
        ],
        "function_name": "claim_region_hexes_for_city"
      },
      {
        "signature": "generate_settlements(5)",
        "files": [
          "backend/systems/world_generation/world_utils.py",
          "backend/systems/world_generation/generators/terrain_generator.py"
        ],
        "function_name": "generate_settlements"
      },
      {
        "signature": "generate_non_settlement_pois(5)",
        "files": [
          "backend/systems/world_generation/world_utils.py",
          "backend/systems/world_generation/generators/terrain_generator.py"
        ],
        "function_name": "generate_non_settlement_pois"
      },
      {
        "signature": "generate_region(2)",
        "files": [
          "backend/systems/world_generation/world_utils.py",
          "backend/systems/world_generation/generators/terrain_generator.py"
        ],
        "function_name": "generate_region"
      },
      {
        "signature": "generate_minor_nature_squares(4)",
        "files": [
          "backend/systems/world_generation/world_utils.py",
          "backend/systems/world_generation/generators/terrain_generator.py"
        ],
        "function_name": "generate_minor_nature_squares"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/memory/memory_associations.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/memory/memory_associations.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/memory/memory_associations.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/memory/memory_associations.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/memory/memory_associations.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/memory/memory_associations.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "get_system_prompt(3)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/memory/summarization_styles.py"
        ],
        "function_name": "get_system_prompt"
      },
      {
        "signature": "get_metadata(2)",
        "files": [
          "backend/systems/memory/cognitive_frames.py",
          "backend/systems/memory/memory_categories.py"
        ],
        "function_name": "get_metadata"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/memory/models/memory.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/memory/models/memory.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/memory/models/memory.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/memory/models/memory.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/memory/models/memory.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/memory/services/memory_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/schemas.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/diplomacy_facade.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_faction_relationship(3)",
        "files": [
          "backend/systems/llm/repositories/faction_repository.py",
          "backend/systems/diplomacy/diplomacy_facade.py"
        ],
        "function_name": "get_faction_relationship"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/diplomacy_facade.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/diplomacy/repository.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_faction_relationship(3)",
        "files": [
          "backend/systems/llm/repositories/faction_repository.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "get_faction_relationship"
      },
      {
        "signature": "get_faction_relationships(2)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "get_faction_relationships"
      },
      {
        "signature": "update_faction_tension(5)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "update_faction_tension"
      },
      {
        "signature": "set_diplomatic_status(4)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "set_diplomatic_status"
      },
      {
        "signature": "are_at_war(3)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "are_at_war"
      },
      {
        "signature": "are_allied(3)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "are_allied"
      },
      {
        "signature": "check_war_threshold(3)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "check_war_threshold"
      },
      {
        "signature": "check_alliance_threshold(3)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "check_alliance_threshold"
      },
      {
        "signature": "apply_decay_to_all_relations(1)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "apply_decay_to_all_relations"
      },
      {
        "signature": "get_tension_summary(2)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "get_tension_summary"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/tension_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "create_treaty_proposal(6)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "create_treaty_proposal"
      },
      {
        "signature": "respond_to_treaty_proposal(4)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "respond_to_treaty_proposal"
      },
      {
        "signature": "get_active_treaties(2)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "get_active_treaties"
      },
      {
        "signature": "get_treaty_proposals(3)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "get_treaty_proposals"
      },
      {
        "signature": "create_diplomatic_incident(7)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "create_diplomatic_incident"
      },
      {
        "signature": "resolve_diplomatic_incident(4)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "resolve_diplomatic_incident"
      },
      {
        "signature": "create_ultimatum(6)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "create_ultimatum"
      },
      {
        "signature": "respond_to_ultimatum(4)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "respond_to_ultimatum"
      },
      {
        "signature": "create_sanction_proposal(7)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "create_sanction_proposal"
      },
      {
        "signature": "apply_sanction(2)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "apply_sanction"
      },
      {
        "signature": "start_negotiation_session(5)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "start_negotiation_session"
      },
      {
        "signature": "add_negotiation_message(5)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "add_negotiation_message"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/managers/diplomacy_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/utils/relationship_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/utils/diplomacy_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/models/relationship_models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/models/diplomacy_models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/calculators/tension_calculator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/calculators/relationship_calculator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/events/diplomacy_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/events/tension_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/service_modules/incident_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/service_modules/sanction_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_sanction(2)",
        "files": [
          "backend/systems/tension_war/services/diplomatic_manager.py",
          "backend/systems/diplomacy/service_modules/sanction_service.py"
        ],
        "function_name": "get_sanction"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/service_modules/ultimatum_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/service_modules/diplomacy_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/service_modules/treaty_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/service_modules/negotiation_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/diplomacy/service_modules/relationship_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_faction_relationship(3)",
        "files": [
          "backend/systems/llm/repositories/faction_repository.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "get_faction_relationship"
      },
      {
        "signature": "get_faction_relationships(2)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "get_faction_relationships"
      },
      {
        "signature": "update_faction_tension(5)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "update_faction_tension"
      },
      {
        "signature": "set_diplomatic_status(4)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "set_diplomatic_status"
      },
      {
        "signature": "are_at_war(3)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "are_at_war"
      },
      {
        "signature": "are_allied(3)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "are_allied"
      },
      {
        "signature": "check_war_threshold(3)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "check_war_threshold"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/diplomacy/service_modules/tension_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/combat/combat_ram.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/combat_ram.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/combat/fog_of_war.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/fog_of_war.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/combat_area.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/combat/combat_area.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/combat_area.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/combat_debug_interface.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/combat/effect_visualizer.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/effect_visualizer.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/effect_visualizer.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/combat/object_pool.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "clear(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/combat/object_pool.py"
        ],
        "function_name": "clear"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/object_pool.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/combat/object_pool.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/object_pool.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "release(2)",
        "files": [
          "backend/systems/combat/object_pool.py",
          "backend/systems/combat/object_pool.py"
        ],
        "function_name": "release"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/combat/combat_handler_class.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/combat/combat_handler_class.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/combat/combat_handler_class.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/combat_state_manager.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/combat/combat_state_manager.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/combat/combat_types_stub.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/combat/action_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/action_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "reset(2)",
        "files": [
          "backend/systems/combat/object_pool.py",
          "backend/systems/combat/action_system.py"
        ],
        "function_name": "reset"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/action_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/combat/combat_animation_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/combat_animation_system.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/combat_animation_system.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/combat_animation_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "update(2)",
        "files": [
          "backend/systems/combat/combat_animation_system.py",
          "backend/systems/combat/combat_animation_system.py"
        ],
        "function_name": "update"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/combat/combat_state_class.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/combat_state_class.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(3)",
        "files": [
          "backend/systems/memory/models/memory.py",
          "backend/systems/combat/combat_state_class.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "advance_turn(1)",
        "files": [
          "backend/systems/combat/combat_state_manager.py",
          "backend/systems/combat/combat_state_class.py"
        ],
        "function_name": "advance_turn"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/legacy_adapter.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/combat/legacy_adapter.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/turn_queue.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "clear(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/combat/turn_queue.py"
        ],
        "function_name": "clear"
      },
      {
        "signature": "fix_event_dispatches(0)",
        "files": [
          "backend/systems/combat/fix_events_complete.py",
          "backend/systems/combat/fix_events.py"
        ],
        "function_name": "fix_event_dispatches"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "next_turn(1)",
        "files": [
          "backend/systems/combat/turn_queue.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "next_turn"
      },
      {
        "signature": "get_state_history(1)",
        "files": [
          "backend/systems/combat/combat_state_manager.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "get_state_history"
      },
      {
        "signature": "remove_character(2)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "remove_character"
      },
      {
        "signature": "to_json(1)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "to_json"
      },
      {
        "signature": "save_to_file(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "save_to_file"
      },
      {
        "signature": "load_from_file(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "load_from_file"
      },
      {
        "signature": "apply_effect(4)",
        "files": [
          "backend/systems/combat/legacy_adapter.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "apply_effect"
      },
      {
        "signature": "get_available_actions(2)",
        "files": [
          "backend/systems/combat/action_system.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "get_available_actions"
      },
      {
        "signature": "delay_turn(2)",
        "files": [
          "backend/systems/combat/turn_queue.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "delay_turn"
      },
      {
        "signature": "recompute_initiative(3)",
        "files": [
          "backend/systems/combat/turn_queue.py",
          "backend/systems/combat/combat_facade.py"
        ],
        "function_name": "recompute_initiative"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/combat/routers/combat_actions.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/combat/managers/state_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "pause_combat(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/state_manager.py"
        ],
        "function_name": "pause_combat"
      },
      {
        "signature": "resume_combat(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/state_manager.py"
        ],
        "function_name": "resume_combat"
      },
      {
        "signature": "end_combat(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/state_manager.py"
        ],
        "function_name": "end_combat"
      },
      {
        "signature": "get_state_history(1)",
        "files": [
          "backend/systems/combat/combat_state_manager.py",
          "backend/systems/combat/managers/state_manager.py"
        ],
        "function_name": "get_state_history"
      },
      {
        "signature": "get_current_state(1)",
        "files": [
          "backend/systems/combat/combat_state_manager.py",
          "backend/systems/combat/managers/state_manager.py"
        ],
        "function_name": "get_current_state"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "start_combat(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "start_combat"
      },
      {
        "signature": "next_turn(1)",
        "files": [
          "backend/systems/combat/turn_queue.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "next_turn"
      },
      {
        "signature": "take_action(4)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "take_action"
      },
      {
        "signature": "calculate_damage(5)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "calculate_damage"
      },
      {
        "signature": "apply_damage(5)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "apply_damage"
      },
      {
        "signature": "apply_healing(4)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "apply_healing"
      },
      {
        "signature": "pause_combat(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "pause_combat"
      },
      {
        "signature": "resume_combat(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "resume_combat"
      },
      {
        "signature": "end_combat(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "end_combat"
      },
      {
        "signature": "get_state_history(1)",
        "files": [
          "backend/systems/combat/combat_state_manager.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "get_state_history"
      },
      {
        "signature": "get_combat_state(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "get_combat_state"
      },
      {
        "signature": "add_character(2)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "add_character"
      },
      {
        "signature": "remove_character(2)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "remove_character"
      },
      {
        "signature": "round_number(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/managers/combat_manager.py"
        ],
        "function_name": "round_number"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/combat/utils/combat_calculations.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/utils/perception_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_visible_entities(2)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/utils/perception_utils.py"
        ],
        "function_name": "get_visible_entities"
      },
      {
        "signature": "execute_perception_check(4)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/utils/perception_utils.py"
        ],
        "function_name": "execute_perception_check"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/utils/combat_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/repositories/combat_serializer.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "serialize(1)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/repositories/combat_serializer.py"
        ],
        "function_name": "serialize"
      },
      {
        "signature": "deserialize(2)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/repositories/combat_serializer.py"
        ],
        "function_name": "deserialize"
      },
      {
        "signature": "to_json(1)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/combat/repositories/combat_serializer.py"
        ],
        "function_name": "to_json"
      },
      {
        "signature": "from_json(2)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/repositories/combat_serializer.py"
        ],
        "function_name": "from_json"
      },
      {
        "signature": "save_to_file(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/combat/repositories/combat_serializer.py"
        ],
        "function_name": "save_to_file"
      },
      {
        "signature": "load_from_file(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/combat/repositories/combat_serializer.py"
        ],
        "function_name": "load_from_file"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/combat/models/stats.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/combat/models/stats.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/combat/models/stats.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/models/combat_models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/combat/processors/damage_processor.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "calculate_damage(5)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/processors/damage_processor.py"
        ],
        "function_name": "calculate_damage"
      },
      {
        "signature": "apply_damage(5)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/processors/damage_processor.py"
        ],
        "function_name": "apply_damage"
      },
      {
        "signature": "apply_healing(4)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/processors/damage_processor.py"
        ],
        "function_name": "apply_healing"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/calculators/damage_calculator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/calculators/initiative_calculator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "calculate_initiative(2)",
        "files": [
          "backend/systems/combat/calculators/damage_calculator.py",
          "backend/systems/combat/calculators/initiative_calculator.py"
        ],
        "function_name": "calculate_initiative"
      },
      {
        "signature": "calculate_initiative_for_character(2)",
        "files": [
          "backend/systems/combat/calculators/damage_calculator.py",
          "backend/systems/combat/calculators/initiative_calculator.py"
        ],
        "function_name": "calculate_initiative_for_character"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/validators/combat_validator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/events/combat_handlers.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/events/combat_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/combat/effects/damage_effects.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "remove(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "remove"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "modify_damage(3)",
        "files": [
          "backend/systems/combat/effects/core/damage_effects.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "modify_damage"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "modify_damage(3)",
        "files": [
          "backend/systems/combat/effects/core/damage_effects.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "modify_damage"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "modify_damage(3)",
        "files": [
          "backend/systems/combat/effects/core/damage_effects.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "modify_damage"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_get_combatant_id(2)",
        "files": [
          "backend/systems/combat/action_system.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "_get_combatant_id"
      },
      {
        "signature": "apply_effect(4)",
        "files": [
          "backend/systems/combat/legacy_adapter.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "apply_effect"
      },
      {
        "signature": "remove_effect(3)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/combat/effects/core/damage_effects.py"
        ],
        "function_name": "remove_effect"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/services/damage_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_effect_to_dict(2)",
        "files": [
          "backend/systems/combat/repositories/combat_serializer.py",
          "backend/systems/combat/services/damage_service.py"
        ],
        "function_name": "_effect_to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/services/combat_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/combat/services/initiative_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/combat/services/combat_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_combat_state(2)",
        "files": [
          "backend/systems/combat/utils/combat_utils.py",
          "backend/systems/combat/services/combat_service.py"
        ],
        "function_name": "get_combat_state"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/combat/services/state_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_get_combat_state_dict(2)",
        "files": [
          "backend/systems/combat/services/damage_service.py",
          "backend/systems/combat/services/state_service.py"
        ],
        "function_name": "_get_combat_state_dict"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "repository(1)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "repository"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "repository(1)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "repository"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "repository(1)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "repository"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "repository(1)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "repository"
      },
      {
        "signature": "get_all(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "get_all"
      },
      {
        "signature": "get_all(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "get_all"
      },
      {
        "signature": "get_all(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/services.py"
        ],
        "function_name": "get_all"
      },
      {
        "signature": "validate(1)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/magic/models.py"
        ],
        "function_name": "validate"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/magic/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/magic/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "is_expired(1)",
        "files": [
          "backend/systems/combat/effects/core/damage_effects.py",
          "backend/systems/magic/models.py"
        ],
        "function_name": "is_expired"
      },
      {
        "signature": "validate(1)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/magic/models.py"
        ],
        "function_name": "validate"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/magic/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "validate(1)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/magic/models.py"
        ],
        "function_name": "validate"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/magic/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "search_spells(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/router.py"
        ],
        "function_name": "search_spells"
      },
      {
        "signature": "get_spellbook(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/router.py"
        ],
        "function_name": "get_spellbook"
      },
      {
        "signature": "get_active_effects(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/repositories/spell_effect_repository.py"
        ],
        "function_name": "get_active_effects"
      },
      {
        "signature": "get_all(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/repositories/spell_effect_repository.py"
        ],
        "function_name": "get_all"
      },
      {
        "signature": "end_effect(2)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/repositories/spell_effect_repository.py"
        ],
        "function_name": "end_effect"
      },
      {
        "signature": "create(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/spellbook_repository.py"
        ],
        "function_name": "create"
      },
      {
        "signature": "get_by_id(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/spellbook_repository.py"
        ],
        "function_name": "get_by_id"
      },
      {
        "signature": "add_spell(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/repositories/spellbook_repository.py"
        ],
        "function_name": "add_spell"
      },
      {
        "signature": "remove_spell(3)",
        "files": [
          "backend/systems/magic/services.py",
          "backend/systems/magic/repositories/spellbook_repository.py"
        ],
        "function_name": "remove_spell"
      },
      {
        "signature": "update(3)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/spellbook_repository.py"
        ],
        "function_name": "update"
      },
      {
        "signature": "delete(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/spellbook_repository.py"
        ],
        "function_name": "delete"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/magic/repositories/__init__.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_by_id(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/__init__.py"
        ],
        "function_name": "get_by_id"
      },
      {
        "signature": "create(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/__init__.py"
        ],
        "function_name": "create"
      },
      {
        "signature": "update(3)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/__init__.py"
        ],
        "function_name": "update"
      },
      {
        "signature": "delete(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/__init__.py"
        ],
        "function_name": "delete"
      },
      {
        "signature": "create(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/spell_repository.py"
        ],
        "function_name": "create"
      },
      {
        "signature": "get_by_id(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/spell_repository.py"
        ],
        "function_name": "get_by_id"
      },
      {
        "signature": "update(3)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/spell_repository.py"
        ],
        "function_name": "update"
      },
      {
        "signature": "delete(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/magic/repositories/spell_repository.py"
        ],
        "function_name": "delete"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/magic/repositories/base.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/character/core/character_model.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/character/core/character_model.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/character/core/character_builder.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/core/character_builder.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__post_init__(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/character/core/events/scene_events.py"
        ],
        "function_name": "__post_init__"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/character/core/events/scene_events.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__new__(1)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/character/core/events/scene_events.py"
        ],
        "function_name": "__new__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/core/events/scene_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/character/core/events/scene_events.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "decorator(1)",
        "files": [
          "backend/systems/combat/legacy_adapter.py",
          "backend/systems/character/core/events/event_dispatcher.py"
        ],
        "function_name": "decorator"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/character/core/events/event_dispatcher.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/core/events/event_dispatcher.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "subscribe(4)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/character/core/events/event_dispatcher.py"
        ],
        "function_name": "subscribe"
      },
      {
        "signature": "unsubscribe(3)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/character/core/events/event_dispatcher.py"
        ],
        "function_name": "unsubscribe"
      },
      {
        "signature": "add_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/character/core/events/event_dispatcher.py"
        ],
        "function_name": "add_middleware"
      },
      {
        "signature": "publish_sync(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/character/core/events/event_dispatcher.py"
        ],
        "function_name": "publish_sync"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/core/events/event_dispatcher.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/core/events/event_factory.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "validate_event_type(2)",
        "files": [
          "backend/systems/character/core/events/canonical_events.py",
          "backend/systems/character/core/events/canonical_events.py"
        ],
        "function_name": "validate_event_type"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/character/core/events/quest_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_event_dispatcher(0)",
        "files": [
          "backend/systems/character/core/events/event_dispatcher.py",
          "backend/systems/character/core/events/event_bus.py"
        ],
        "function_name": "get_event_dispatcher"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/character/core/events/event_bus.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/core/events/event_bus.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "unsubscribe(3)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/character/core/events/event_bus.py"
        ],
        "function_name": "unsubscribe"
      },
      {
        "signature": "get_stats(1)",
        "files": [
          "backend/systems/combat/object_pool.py",
          "backend/systems/character/core/events/event_bus.py"
        ],
        "function_name": "get_stats"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/core/events/event_bus.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/character/core/events/scene_event_system.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/core/events/scene_event_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_stats(1)",
        "files": [
          "backend/systems/combat/object_pool.py",
          "backend/systems/character/core/events/scene_event_system.py"
        ],
        "function_name": "get_stats"
      },
      {
        "signature": "clear_stats(1)",
        "files": [
          "backend/systems/character/core/events/event_bus.py",
          "backend/systems/character/core/events/scene_event_system.py"
        ],
        "function_name": "clear_stats"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/memory/memory_manager.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/character/memory/memory_manager.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/character/memory/memory_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_memories(5)",
        "files": [
          "backend/systems/character/core/character_model.py",
          "backend/systems/character/memory/memory_manager.py"
        ],
        "function_name": "get_memories"
      },
      {
        "signature": "__init__(7)",
        "files": [
          "backend/systems/combat/combat_area.py",
          "backend/systems/character/memory/memory.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "decay(2)",
        "files": [
          "backend/systems/character/memory/memory_manager.py",
          "backend/systems/character/memory/memory.py"
        ],
        "function_name": "decay"
      },
      {
        "signature": "is_expired(2)",
        "files": [
          "backend/systems/memory/models/memory.py",
          "backend/systems/character/memory/memory.py"
        ],
        "function_name": "is_expired"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/character/memory/memory.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "add_memory(2)",
        "files": [
          "backend/systems/character/core/character_model.py",
          "backend/systems/character/memory/memory.py"
        ],
        "function_name": "add_memory"
      },
      {
        "signature": "reinforce_memory(3)",
        "files": [
          "backend/systems/character/memory/memory_manager.py",
          "backend/systems/character/memory/memory.py"
        ],
        "function_name": "reinforce_memory"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/memory/rumor_transformer.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_json(1)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "to_json"
      },
      {
        "signature": "save(2)",
        "files": [
          "backend/systems/character/core/character_builder.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "save"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(1)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "add_entry(4)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "add_entry"
      },
      {
        "signature": "_enforce_limits(1)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "_enforce_limits"
      },
      {
        "signature": "get_context_window(3)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "get_context_window"
      },
      {
        "signature": "extract_key_info(2)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "extract_key_info"
      },
      {
        "signature": "to_json(1)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "to_json"
      },
      {
        "signature": "from_json(1)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "from_json"
      },
      {
        "signature": "save(2)",
        "files": [
          "backend/systems/character/core/character_builder.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "save"
      },
      {
        "signature": "load(1)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/character/utils/context_manager.py"
        ],
        "function_name": "load"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/utils/monitoring.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "decorator(1)",
        "files": [
          "backend/systems/combat/legacy_adapter.py",
          "backend/systems/character/utils/monitoring.py"
        ],
        "function_name": "decorator"
      },
      {
        "signature": "wrapper(0)",
        "files": [
          "backend/systems/combat/legacy_adapter.py",
          "backend/systems/character/utils/monitoring.py"
        ],
        "function_name": "wrapper"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/utils/visual_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/utils/state_sync.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/utils/validation.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/repositories/rumor_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/repositories/character_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_by_id(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/character/repositories/character_repository.py"
        ],
        "function_name": "get_by_id"
      },
      {
        "signature": "get_by_name(2)",
        "files": [
          "backend/systems/magic/repositories/spell_repository.py",
          "backend/systems/character/repositories/character_repository.py"
        ],
        "function_name": "get_by_name"
      },
      {
        "signature": "create(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/character/repositories/character_repository.py"
        ],
        "function_name": "create"
      },
      {
        "signature": "update(2)",
        "files": [
          "backend/systems/combat/combat_animation_system.py",
          "backend/systems/character/repositories/character_repository.py"
        ],
        "function_name": "update"
      },
      {
        "signature": "delete(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/character/repositories/character_repository.py"
        ],
        "function_name": "delete"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/blendshapes.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/models/randomization.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "weighted_choice(2)",
        "files": [
          "backend/systems/character/utils/visual_utils.py",
          "backend/systems/character/models/randomization.py"
        ],
        "function_name": "weighted_choice"
      },
      {
        "signature": "generate(2)",
        "files": [
          "backend/systems/character/utils/visual_utils.py",
          "backend/systems/character/models/randomization.py"
        ],
        "function_name": "generate"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/character/models/relationship.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/models/relationship.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/presets.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/materials.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "value(1)",
        "files": [
          "backend/systems/character/models/mood.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "value"
      },
      {
        "signature": "is_expired(1)",
        "files": [
          "backend/systems/combat/effects/core/damage_effects.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "is_expired"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(9)",
        "files": [
          "backend/systems/character/memory/memory_manager.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "update(2)",
        "files": [
          "backend/systems/combat/combat_animation_system.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "update"
      },
      {
        "signature": "get_mood_description(1)",
        "files": [
          "backend/systems/character/core/character_model.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "get_mood_description"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/character/models/mood.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/mesh.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/character/models/model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/character/models/model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/character/models/model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(7)",
        "files": [
          "backend/systems/combat/combat_area.py",
          "backend/systems/character/models/model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "set_blendshape(3)",
        "files": [
          "backend/systems/character/models/blendshapes.py",
          "backend/systems/character/models/model.py"
        ],
        "function_name": "set_blendshape"
      },
      {
        "signature": "assign_material(4)",
        "files": [
          "backend/systems/character/models/materials.py",
          "backend/systems/character/models/model.py"
        ],
        "function_name": "assign_material"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/models/model.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/character/models/model.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/animation.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/goal.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/goal.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/goal.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/goal.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/goal.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/goal.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/character/models/goal.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "serialize_character(1)",
        "files": [
          "backend/systems/character/utils/visual_utils.py",
          "backend/systems/character/models/serialization.py"
        ],
        "function_name": "serialize_character"
      },
      {
        "signature": "deserialize_character(2)",
        "files": [
          "backend/systems/character/utils/visual_utils.py",
          "backend/systems/character/models/serialization.py"
        ],
        "function_name": "deserialize_character"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(8)",
        "files": [
          "backend/systems/combat/combat_animation_system.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "swap_mesh(3)",
        "files": [
          "backend/systems/character/models/model.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "swap_mesh"
      },
      {
        "signature": "set_blendshape(3)",
        "files": [
          "backend/systems/character/models/blendshapes.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "set_blendshape"
      },
      {
        "signature": "assign_material(4)",
        "files": [
          "backend/systems/character/models/materials.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "assign_material"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/character/models/visual_model.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/relationship_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/relationship_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/relationship_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/relationship_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/models/relationship_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/schemas/relationship.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/inventory/base_item.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/base_item.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/location.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/location.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/location.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/inventory_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/inventory_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/inventory_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/inventory/shop.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/shop.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/character/inventory/shop.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "get_character(2)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/character/api/character_api.py"
        ],
        "function_name": "get_character"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/api/schemas.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/progression/party_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "create_party(3)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/progression/party_service.py"
        ],
        "function_name": "create_party"
      },
      {
        "signature": "add_to_party(3)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/progression/party_service.py"
        ],
        "function_name": "add_to_party"
      },
      {
        "signature": "remove_from_party(3)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/progression/party_service.py"
        ],
        "function_name": "remove_from_party"
      },
      {
        "signature": "award_xp_to_party(3)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/progression/party_service.py"
        ],
        "function_name": "award_xp_to_party"
      },
      {
        "signature": "abandon_party(2)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/progression/party_service.py"
        ],
        "function_name": "abandon_party"
      },
      {
        "signature": "add_relationship(4)",
        "files": [
          "backend/systems/character/core/character_model.py",
          "backend/systems/character/npc/npc_features.py"
        ],
        "function_name": "add_relationship"
      },
      {
        "signature": "add_rumor(3)",
        "files": [
          "backend/systems/llm/repositories/npc_repository.py",
          "backend/systems/character/npc/npc_utils.py"
        ],
        "function_name": "add_rumor"
      },
      {
        "signature": "get(2)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/character/npc/npc_utils.py"
        ],
        "function_name": "get"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/npc/npc_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "generate_rumor(2)",
        "files": [
          "backend/systems/character/npc/npc_features.py",
          "backend/systems/character/npc/npc_rumor_utils.py"
        ],
        "function_name": "generate_rumor"
      },
      {
        "signature": "create_event(4)",
        "files": [
          "backend/systems/character/core/events/scene_events.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "create_event"
      },
      {
        "signature": "__post_init__(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "__post_init__"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__new__(1)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "__new__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "register_listener(2)",
        "files": [
          "backend/systems/character/core/events/scene_events.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "register_listener"
      },
      {
        "signature": "dispatch(2)",
        "files": [
          "backend/systems/character/core/events/scene_events.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "dispatch"
      },
      {
        "signature": "emit_scene_event(5)",
        "files": [
          "backend/systems/character/core/events/scene_events.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "emit_scene_event"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/character/services/scene_events.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/character/services/rumor_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_event_factory(0)",
        "files": [
          "backend/systems/character/core/events/event_factory.py",
          "backend/systems/character/services/event_factory.py"
        ],
        "function_name": "get_event_factory"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/services/event_factory.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "create_event(2)",
        "files": [
          "backend/systems/character/core/events/event_factory.py",
          "backend/systems/character/services/event_factory.py"
        ],
        "function_name": "create_event"
      },
      {
        "signature": "publish_event_sync(2)",
        "files": [
          "backend/systems/character/core/events/event_factory.py",
          "backend/systems/character/services/event_factory.py"
        ],
        "function_name": "publish_event_sync"
      },
      {
        "signature": "create_and_publish_sync(2)",
        "files": [
          "backend/systems/character/core/events/event_factory.py",
          "backend/systems/character/services/event_factory.py"
        ],
        "function_name": "create_and_publish_sync"
      },
      {
        "signature": "system_event_sync(4)",
        "files": [
          "backend/systems/character/core/events/event_factory.py",
          "backend/systems/character/services/event_factory.py"
        ],
        "function_name": "system_event_sync"
      },
      {
        "signature": "memory_event_sync(5)",
        "files": [
          "backend/systems/character/core/events/event_factory.py",
          "backend/systems/character/services/event_factory.py"
        ],
        "function_name": "memory_event_sync"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/character/services/mood_service.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "handle_event(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "handle_event"
      },
      {
        "signature": "_handle_item_collection(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_item_collection"
      },
      {
        "signature": "_handle_enemy_defeat(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_enemy_defeat"
      },
      {
        "signature": "_handle_location_visit(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_location_visit"
      },
      {
        "signature": "_handle_npc_interaction(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_npc_interaction"
      },
      {
        "signature": "_handle_skill_learned(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_skill_learned"
      },
      {
        "signature": "_handle_faction_rep_change(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_faction_rep_change"
      },
      {
        "signature": "_handle_resource_gathering(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_resource_gathering"
      },
      {
        "signature": "_handle_crafting_completion(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_crafting_completion"
      },
      {
        "signature": "_handle_quest_acceptance(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_quest_acceptance"
      },
      {
        "signature": "_handle_quest_abandonment(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_quest_abandonment"
      },
      {
        "signature": "_handle_time_passage(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_time_passage"
      },
      {
        "signature": "_handle_world_state_change(2)",
        "files": [
          "backend/systems/character/core/events/quest_events.py",
          "backend/systems/character/services/quest_events.py"
        ],
        "function_name": "_handle_world_state_change"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/services/relationship_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "update_relationship(3)",
        "files": [
          "backend/systems/character/npc/npc_utils.py",
          "backend/systems/character/services/relationship_service.py"
        ],
        "function_name": "update_relationship"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "create_party(3)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "create_party"
      },
      {
        "signature": "add_to_party(3)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "add_to_party"
      },
      {
        "signature": "remove_from_party(3)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "remove_from_party"
      },
      {
        "signature": "get_total_party_level(3)",
        "files": [
          "backend/systems/character/progression/party_service.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "get_total_party_level"
      },
      {
        "signature": "award_xp_to_party(3)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "award_xp_to_party"
      },
      {
        "signature": "abandon_party(2)",
        "files": [
          "backend/systems/character/api/party_api.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "abandon_party"
      },
      {
        "signature": "_get_character_by_id(2)",
        "files": [
          "backend/systems/character/progression/party_service.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "_get_character_by_id"
      },
      {
        "signature": "_get_party_by_id(2)",
        "files": [
          "backend/systems/character/progression/party_service.py",
          "backend/systems/character/services/party_service.py"
        ],
        "function_name": "_get_party_by_id"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/character/services/goal_service.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "register_system_dependency(3)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "register_system_dependency"
      },
      {
        "signature": "unregister_system_dependency(2)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "unregister_system_dependency"
      },
      {
        "signature": "register_scene_listener(4)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "register_scene_listener"
      },
      {
        "signature": "unregister_scene_listener(4)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "unregister_scene_listener"
      },
      {
        "signature": "register_global_listener(3)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "register_global_listener"
      },
      {
        "signature": "unregister_global_listener(3)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "unregister_global_listener"
      },
      {
        "signature": "_ensure_event_bus_subscription(2)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "_ensure_event_bus_subscription"
      },
      {
        "signature": "_handle_event(2)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "_handle_event"
      },
      {
        "signature": "emit_scene_event(6)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "emit_scene_event"
      },
      {
        "signature": "set_config(3)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "set_config"
      },
      {
        "signature": "get_config(2)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "get_config"
      },
      {
        "signature": "get_stats(1)",
        "files": [
          "backend/systems/combat/object_pool.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "get_stats"
      },
      {
        "signature": "clear_stats(1)",
        "files": [
          "backend/systems/character/core/events/event_bus.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "clear_stats"
      },
      {
        "signature": "shutdown(1)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/character/services/scene_event_system.py"
        ],
        "function_name": "shutdown"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/character/services/services/core/character_service.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/auth_user/repositories/user_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/auth_user/repositories/role_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/auth_user/models/user_models.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/auth_user/models/user_models.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/auth_user/models/user_models.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "validate_password_strength(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/auth_user/services/validation_service.py"
        ],
        "function_name": "validate_password_strength"
      },
      {
        "signature": "validate_email_format(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/auth_user/services/validation_service.py"
        ],
        "function_name": "validate_email_format"
      },
      {
        "signature": "validate_username_format(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/auth_user/services/validation_service.py"
        ],
        "function_name": "validate_username_format"
      },
      {
        "signature": "validate_password_strength(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/auth_user/services/validation_service.py"
        ],
        "function_name": "validate_password_strength"
      },
      {
        "signature": "validate_username_format(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/auth_user/services/validation_service.py"
        ],
        "function_name": "validate_username_format"
      },
      {
        "signature": "validate_email_format(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/auth_user/services/validation_service.py"
        ],
        "function_name": "validate_email_format"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/integration/monitoring.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/integration/monitoring.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/integration/monitoring.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/integration/state_sync.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/integration/validation.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "register_schema(3)",
        "files": [
          "backend/systems/character/utils/validation.py",
          "backend/systems/integration/validation.py"
        ],
        "function_name": "register_schema"
      },
      {
        "signature": "validate(3)",
        "files": [
          "backend/systems/character/utils/validation.py",
          "backend/systems/integration/validation.py"
        ],
        "function_name": "validate"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/faction/faction_facade.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_faction(2)",
        "files": [
          "backend/systems/llm/core/faction/faction_manager.py",
          "backend/systems/faction/faction_facade.py"
        ],
        "function_name": "get_faction"
      },
      {
        "signature": "get_faction_relationships(2)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/faction/faction_facade.py"
        ],
        "function_name": "get_faction_relationships"
      },
      {
        "signature": "update_tension(6)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/faction/faction_facade.py"
        ],
        "function_name": "update_tension"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_all_factions(1)",
        "files": [
          "backend/systems/llm/repositories/faction_repository.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "get_all_factions"
      },
      {
        "signature": "get_faction_by_id(2)",
        "files": [
          "backend/systems/llm/repositories/faction_repository.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "get_faction_by_id"
      },
      {
        "signature": "get_faction_by_name(2)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "get_faction_by_name"
      },
      {
        "signature": "delete_faction(2)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "delete_faction"
      },
      {
        "signature": "get_factions_by_type(2)",
        "files": [
          "backend/systems/llm/core/faction/faction_manager.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "get_factions_by_type"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_ensure_files_exist(1)",
        "files": [
          "backend/systems/faction/repositories/faction_repository.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "_ensure_files_exist"
      },
      {
        "signature": "get_relationship(3)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "get_relationship"
      },
      {
        "signature": "get_faction_relationships(2)",
        "files": [
          "backend/systems/diplomacy/diplomacy_facade.py",
          "backend/systems/faction/repositories/faction_repository.py"
        ],
        "function_name": "get_faction_relationships"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/faction/models/faction.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/faction/models/faction.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/faction/models/faction.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/faction/models/faction.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/faction/models/faction.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/faction/models/faction.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/faction/models/faction_goal.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/faction/models/faction_goal.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "get_relationship(3)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_relationship_service.py"
        ],
        "function_name": "get_relationship"
      },
      {
        "signature": "set_diplomatic_stance(8)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_relationship_service.py"
        ],
        "function_name": "set_diplomatic_stance"
      },
      {
        "signature": "update_tension(6)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/faction/services/consolidated_relationship_service.py"
        ],
        "function_name": "update_tension"
      },
      {
        "signature": "declare_war(5)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_relationship_service.py"
        ],
        "function_name": "declare_war"
      },
      {
        "signature": "make_peace(5)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_relationship_service.py"
        ],
        "function_name": "make_peace"
      },
      {
        "signature": "process_tension_decay(5)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_relationship_service.py"
        ],
        "function_name": "process_tension_decay"
      },
      {
        "signature": "resolve_war_outcome(7)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_relationship_service.py"
        ],
        "function_name": "resolve_war_outcome"
      },
      {
        "signature": "create_faction(12)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "create_faction"
      },
      {
        "signature": "get_faction(2)",
        "files": [
          "backend/systems/llm/core/faction/faction_manager.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "get_faction"
      },
      {
        "signature": "get_faction_by_name(2)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "get_faction_by_name"
      },
      {
        "signature": "update_faction(2)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "update_faction"
      },
      {
        "signature": "delete_faction(2)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "delete_faction"
      },
      {
        "signature": "assign_faction_to_poi(5)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "assign_faction_to_poi"
      },
      {
        "signature": "calculate_affinity(3)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "calculate_affinity"
      },
      {
        "signature": "add_faction_goal(10)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "add_faction_goal"
      },
      {
        "signature": "propagate_faction_influence(2)",
        "files": [
          "backend/systems/faction/faction_tick_utils.py",
          "backend/systems/faction/services/consolidated_faction_service.py"
        ],
        "function_name": "propagate_faction_influence"
      },
      {
        "signature": "assign_faction_to_character(7)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_membership_service.py"
        ],
        "function_name": "assign_faction_to_character"
      },
      {
        "signature": "get_faction_members(5)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_membership_service.py"
        ],
        "function_name": "get_faction_members"
      },
      {
        "signature": "get_character_factions(4)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_membership_service.py"
        ],
        "function_name": "get_character_factions"
      },
      {
        "signature": "update_character_loyalty(5)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_membership_service.py"
        ],
        "function_name": "update_character_loyalty"
      },
      {
        "signature": "remove_character_from_faction(4)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_membership_service.py"
        ],
        "function_name": "remove_character_from_faction"
      },
      {
        "signature": "calculate_faction_schism_probability(5)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/faction/services/consolidated_membership_service.py"
        ],
        "function_name": "calculate_faction_schism_probability"
      },
      {
        "signature": "__new__(1)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/rumor/service.py"
        ],
        "function_name": "__new__"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/rumor/service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/rumor/gpt_client.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/rumor/schemas.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/rumor/repository.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/rumor/repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/rumor/models/rumor.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/rumor/models/rumor.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/shared/config.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/shared/database.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "calculate_xp_for_level(1)",
        "files": [
          "backend/systems/character/core/character_utils.py",
          "backend/systems/shared/rules.py"
        ],
        "function_name": "calculate_xp_for_level"
      },
      {
        "signature": "calculate_ability_modifier(1)",
        "files": [
          "backend/systems/character/core/character_utils.py",
          "backend/systems/shared/rules.py"
        ],
        "function_name": "calculate_ability_modifier"
      },
      {
        "signature": "load_from_file(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/shared/rules.py"
        ],
        "function_name": "load_from_file"
      },
      {
        "signature": "save_to_file(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/shared/rules.py"
        ],
        "function_name": "save_to_file"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/shared/database/base_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "add(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "add"
      },
      {
        "signature": "delete(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "delete"
      },
      {
        "signature": "commit(1)",
        "files": [
          "backend/systems/magic/repositories/base.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "commit"
      },
      {
        "signature": "rollback(1)",
        "files": [
          "backend/systems/magic/repositories/base.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "rollback"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "execute(3)",
        "files": [
          "backend/systems/combat/action_system.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "execute"
      },
      {
        "signature": "commit(1)",
        "files": [
          "backend/systems/magic/repositories/base.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "commit"
      },
      {
        "signature": "rollback(1)",
        "files": [
          "backend/systems/magic/repositories/base.py",
          "backend/systems/shared/database/database.py"
        ],
        "function_name": "rollback"
      },
      {
        "signature": "get_test_db_session(0)",
        "files": [
          "backend/systems/shared/database.py",
          "backend/systems/shared/database/session.py"
        ],
        "function_name": "get_test_db_session"
      },
      {
        "signature": "create_tables(0)",
        "files": [
          "backend/systems/shared/database.py",
          "backend/systems/shared/database/database_objects.py"
        ],
        "function_name": "create_tables"
      },
      {
        "signature": "drop_tables(0)",
        "files": [
          "backend/systems/shared/database.py",
          "backend/systems/shared/database/database_objects.py"
        ],
        "function_name": "drop_tables"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/shared/database/database_objects.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/shared/utils/error_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/shared/utils/base_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "shutdown(1)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/shared/utils/base_manager.py"
        ],
        "function_name": "shutdown"
      },
      {
        "signature": "set_config(3)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/shared/utils/base_manager.py"
        ],
        "function_name": "set_config"
      },
      {
        "signature": "get_instance(3)",
        "files": [
          "backend/systems/character/memory/memory_manager.py",
          "backend/systems/shared/utils/base_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "main(0)",
        "files": [
          "backend/systems/remove_deprecated_utils.py",
          "backend/systems/shared/utils/cleanup_migrated.py"
        ],
        "function_name": "main"
      },
      {
        "signature": "logging_middleware(1)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "logging_middleware"
      },
      {
        "signature": "analytics_middleware(1)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "analytics_middleware"
      },
      {
        "signature": "filtering_middleware(1)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "filtering_middleware"
      },
      {
        "signature": "__post_init__(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "__post_init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "subscribe(4)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "subscribe"
      },
      {
        "signature": "unsubscribe(3)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "unsubscribe"
      },
      {
        "signature": "add_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "add_middleware"
      },
      {
        "signature": "remove_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "remove_middleware"
      },
      {
        "signature": "publish_sync(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/shared/utils/core/event_bus_utils.py"
        ],
        "function_name": "publish_sync"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/shared/utils/core/json_storage_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/shared/utils/core/time_utils.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__init__(9)",
        "files": [
          "backend/systems/character/memory/memory_manager.py",
          "backend/systems/shared/utils/core/time_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/shared/utils/core/base_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/shared/utils/core/base_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "log_info(2)",
        "files": [
          "backend/systems/shared/utils/base_manager.py",
          "backend/systems/shared/utils/core/base_manager.py"
        ],
        "function_name": "log_info"
      },
      {
        "signature": "log_warning(2)",
        "files": [
          "backend/systems/shared/utils/base_manager.py",
          "backend/systems/shared/utils/core/base_manager.py"
        ],
        "function_name": "log_warning"
      },
      {
        "signature": "deep_merge(4)",
        "files": [
          "backend/systems/shared/utils/dictionary_utils.py",
          "backend/systems/shared/utils/core/dictionary_utils.py"
        ],
        "function_name": "deep_merge"
      },
      {
        "signature": "flatten_dict(3)",
        "files": [
          "backend/systems/shared/utils/dictionary_utils.py",
          "backend/systems/shared/utils/core/dictionary_utils.py"
        ],
        "function_name": "flatten_dict"
      },
      {
        "signature": "unflatten_dict(2)",
        "files": [
          "backend/systems/shared/utils/dictionary_utils.py",
          "backend/systems/shared/utils/core/dictionary_utils.py"
        ],
        "function_name": "unflatten_dict"
      },
      {
        "signature": "validate_password_strength(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/shared/utils/security/validation_utils.py"
        ],
        "function_name": "validate_password_strength"
      },
      {
        "signature": "validate_username_format(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/shared/utils/security/validation_utils.py"
        ],
        "function_name": "validate_username_format"
      },
      {
        "signature": "validate_email_format(1)",
        "files": [
          "backend/systems/character/utils/validation_utils.py",
          "backend/systems/shared/utils/security/validation_utils.py"
        ],
        "function_name": "validate_email_format"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/shared/utils/game/random_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "remove_item(2)",
        "files": [
          "backend/systems/character/inventory/inventory_models.py",
          "backend/systems/shared/utils/game/random_utils.py"
        ],
        "function_name": "remove_item"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/shared/utils/game/random_utils.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/shared/utils/game/random_utils.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/shared/utils/game/random_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/shared/utils/game/random_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(7)",
        "files": [
          "backend/systems/combat/combat_area.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_motif(2)",
        "files": [
          "backend/systems/llm/core/motif_system.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "get_motif"
      },
      {
        "signature": "get_motifs_by_category(2)",
        "files": [
          "backend/systems/llm/core/motif_system.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "get_motifs_by_category"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/shared/utils/game/motif_utils.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "calculate_relationship_strength(2)",
        "files": [
          "backend/systems/memory/utils/memory_utils.py",
          "backend/systems/shared/utils/game/memory_utils.py"
        ],
        "function_name": "calculate_relationship_strength"
      },
      {
        "signature": "__init__(8)",
        "files": [
          "backend/systems/combat/combat_animation_system.py",
          "backend/systems/shared/utils/game/memory_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/shared/utils/game/memory_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/shared/models/base.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/shared/models/base.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/loot/loot_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/loot/loot_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/loot/models/location.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/loot/models/location.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/loot/models/location.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/loot/models/shop.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/loot/models/shop.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/loot/models/shop.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/loot/models/item.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/loot/models/item.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/loot/models/history.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/loot/models/history.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/storage/cloud_storage.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/storage/ui_controller.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/storage/ui_controller.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "update_progress(3)",
        "files": [
          "backend/systems/character/models/goal.py",
          "backend/systems/storage/ui_controller.py"
        ],
        "function_name": "update_progress"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/storage/encryption_service.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/storage/encryption_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/storage/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/storage/events.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/storage/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/storage/autosave_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/storage/autosave_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/storage/storage_service.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/storage/storage_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "time_since(1)",
        "files": [
          "backend/systems/time/utils/time_utils.py",
          "backend/systems/time/utils/time_utils.py"
        ],
        "function_name": "time_since"
      },
      {
        "signature": "format_time_since(1)",
        "files": [
          "backend/systems/time/utils/time_utils.py",
          "backend/systems/time/utils/time_utils.py"
        ],
        "function_name": "format_time_since"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/time/repositories/time_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "advance_time(2)",
        "files": [
          "backend/systems/time/utils/time_utils.py",
          "backend/systems/time/models/calendar_model.py"
        ],
        "function_name": "advance_time"
      },
      {
        "signature": "is_special_date(2)",
        "files": [
          "backend/systems/shared/utils/core/time_utils.py",
          "backend/systems/time/models/calendar_model.py"
        ],
        "function_name": "is_special_date"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/time/models/calendar_model.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/time/services/calendar_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "add_important_date(5)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/calendar_service.py"
        ],
        "function_name": "add_important_date"
      },
      {
        "signature": "remove_important_date(2)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/calendar_service.py"
        ],
        "function_name": "remove_important_date"
      },
      {
        "signature": "get_important_dates_for_date(4)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/calendar_service.py"
        ],
        "function_name": "get_important_dates_for_date"
      },
      {
        "signature": "get_active_holidays(4)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/calendar_service.py"
        ],
        "function_name": "get_active_holidays"
      },
      {
        "signature": "is_holiday(4)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/calendar_service.py"
        ],
        "function_name": "is_holiday"
      },
      {
        "signature": "get_days_in_month(3)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/calendar_service.py"
        ],
        "function_name": "get_days_in_month"
      },
      {
        "signature": "is_special_date(2)",
        "files": [
          "backend/systems/shared/utils/core/time_utils.py",
          "backend/systems/time/services/calendar_service.py"
        ],
        "function_name": "is_special_date"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/time/services/weather_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "load_state(2)",
        "files": [
          "backend/systems/combat/combat_state_manager.py",
          "backend/systems/time/services/weather_service.py"
        ],
        "function_name": "load_state"
      },
      {
        "signature": "reset(1)",
        "files": [
          "backend/systems/combat/fog_of_war.py",
          "backend/systems/time/services/weather_service.py"
        ],
        "function_name": "reset"
      },
      {
        "signature": "__new__(1)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "__new__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "save_state(1)",
        "files": [
          "backend/systems/time/services/weather_service.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "save_state"
      },
      {
        "signature": "load_state(2)",
        "files": [
          "backend/systems/combat/combat_state_manager.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "load_state"
      },
      {
        "signature": "register_callback(3)",
        "files": [
          "backend/systems/storage/ui_controller.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "register_callback"
      },
      {
        "signature": "add_important_date(5)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "add_important_date"
      },
      {
        "signature": "add_holiday(7)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "add_holiday"
      },
      {
        "signature": "remove_important_date(2)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "remove_important_date"
      },
      {
        "signature": "remove_holiday(2)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "remove_holiday"
      },
      {
        "signature": "get_important_dates_for_date(4)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "get_important_dates_for_date"
      },
      {
        "signature": "get_days_in_month(3)",
        "files": [
          "backend/systems/time/models/calendar_model.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "get_days_in_month"
      },
      {
        "signature": "is_special_date(2)",
        "files": [
          "backend/systems/shared/utils/core/time_utils.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "is_special_date"
      },
      {
        "signature": "get_current_weather(1)",
        "files": [
          "backend/systems/time/services/weather_service.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "get_current_weather"
      },
      {
        "signature": "reset(1)",
        "files": [
          "backend/systems/combat/fog_of_war.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "reset"
      },
      {
        "signature": "pause(1)",
        "files": [
          "backend/systems/character/models/goal.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "pause"
      },
      {
        "signature": "resume(1)",
        "files": [
          "backend/systems/character/models/goal.py",
          "backend/systems/time/services/time_manager.py"
        ],
        "function_name": "resume"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/time/services/event_scheduler.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "add_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/time/services/event_scheduler.py"
        ],
        "function_name": "add_middleware"
      },
      {
        "signature": "cancel_event(2)",
        "files": [
          "backend/systems/time/services/time_manager.py",
          "backend/systems/time/services/event_scheduler.py"
        ],
        "function_name": "cancel_event"
      },
      {
        "signature": "_apply_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/time/services/event_scheduler.py"
        ],
        "function_name": "_apply_middleware"
      },
      {
        "signature": "register_callback(3)",
        "files": [
          "backend/systems/storage/ui_controller.py",
          "backend/systems/time/services/event_scheduler.py"
        ],
        "function_name": "register_callback"
      },
      {
        "signature": "unregister_callback(2)",
        "files": [
          "backend/systems/time/services/time_manager.py",
          "backend/systems/time/services/event_scheduler.py"
        ],
        "function_name": "unregister_callback"
      },
      {
        "signature": "get_event(2)",
        "files": [
          "backend/systems/time/services/time_manager.py",
          "backend/systems/time/services/event_scheduler.py"
        ],
        "function_name": "get_event"
      },
      {
        "signature": "get_events(2)",
        "files": [
          "backend/systems/time/services/time_manager.py",
          "backend/systems/time/services/event_scheduler.py"
        ],
        "function_name": "get_events"
      },
      {
        "signature": "_verify_compatibility(0)",
        "files": [
          "backend/systems/motif/utils.py",
          "backend/systems/population/service.py"
        ],
        "function_name": "_verify_compatibility"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/population/models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/population/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/population/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/population/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/population/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/population/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/population/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/population/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/population/services/core/population_service.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/dialogue/analytics_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/dialogue/quest_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/dialogue/quest_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/dialogue/population_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/dialogue/time_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/dialogue/time_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/dialogue/war_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(7)",
        "files": [
          "backend/systems/combat/combat_area.py",
          "backend/systems/dialogue/dialogue_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "is_active(1)",
        "files": [
          "backend/systems/character/models/goal.py",
          "backend/systems/dialogue/dialogue_system.py"
        ],
        "function_name": "is_active"
      },
      {
        "signature": "save(2)",
        "files": [
          "backend/systems/character/core/character_builder.py",
          "backend/systems/dialogue/dialogue_system.py"
        ],
        "function_name": "save"
      },
      {
        "signature": "load(1)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/dialogue/dialogue_system.py"
        ],
        "function_name": "load"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/dialogue/dialogue_system.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/dialogue/dialogue_system.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(16)",
        "files": [
          "backend/systems/memory/models/memory.py",
          "backend/systems/dialogue/dialogue_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "generate_response(5)",
        "files": [
          "backend/systems/llm/language_generator.py",
          "backend/systems/dialogue/dialogue_system.py"
        ],
        "function_name": "generate_response"
      },
      {
        "signature": "__init__(8)",
        "files": [
          "backend/systems/combat/combat_animation_system.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_all_participants(1)",
        "files": [
          "backend/systems/dialogue/dialogue_system.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "get_all_participants"
      },
      {
        "signature": "add_participant(3)",
        "files": [
          "backend/systems/dialogue/dialogue_system.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "add_participant"
      },
      {
        "signature": "remove_participant(2)",
        "files": [
          "backend/systems/dialogue/dialogue_system.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "remove_participant"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(3)",
        "files": [
          "backend/systems/memory/models/memory.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "extract_key_info(2)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "extract_key_info"
      },
      {
        "signature": "to_json(1)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "to_json"
      },
      {
        "signature": "from_json(1)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "from_json"
      },
      {
        "signature": "save(2)",
        "files": [
          "backend/systems/character/core/character_builder.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "save"
      },
      {
        "signature": "load(1)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/dialogue/conversation.py"
        ],
        "function_name": "load"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/dialogue/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/dialogue/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(7)",
        "files": [
          "backend/systems/combat/combat_area.py",
          "backend/systems/dialogue/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/dialogue/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/dialogue/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/dialogue/events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/dialogue/region_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/dialogue/region_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/dialogue/poi_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/dialogue/poi_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__new__(1)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "__new__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "clear(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "clear"
      },
      {
        "signature": "get_conversation(2)",
        "files": [
          "backend/systems/dialogue/dialogue_system.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "get_conversation"
      },
      {
        "signature": "cache_context(4)",
        "files": [
          "backend/systems/dialogue/cache.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "cache_context"
      },
      {
        "signature": "get_cached_context(2)",
        "files": [
          "backend/systems/dialogue/cache.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "get_cached_context"
      },
      {
        "signature": "cache_extraction(4)",
        "files": [
          "backend/systems/dialogue/cache.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "cache_extraction"
      },
      {
        "signature": "get_cached_extraction(2)",
        "files": [
          "backend/systems/dialogue/cache.py",
          "backend/systems/dialogue/cache.py"
        ],
        "function_name": "get_cached_extraction"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/dialogue/faction_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_get_faction_war_perspective(3)",
        "files": [
          "backend/systems/dialogue/war_integration.py",
          "backend/systems/dialogue/faction_integration.py"
        ],
        "function_name": "_get_faction_war_perspective"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/dialogue/memory_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/dialogue/world_state_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/dialogue/rumor_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "count_tokens(1)",
        "files": [
          "backend/systems/character/utils/context_manager.py",
          "backend/systems/dialogue/utils.py"
        ],
        "function_name": "count_tokens"
      },
      {
        "signature": "relevance_score(3)",
        "files": [
          "backend/systems/character/progression/scoring.py",
          "backend/systems/dialogue/utils.py"
        ],
        "function_name": "relevance_score"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/dialogue/relationship_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/dialogue/relationship_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "get_relationship(3)",
        "files": [
          "backend/systems/faction/faction_facade.py",
          "backend/systems/dialogue/relationship_integration.py"
        ],
        "function_name": "get_relationship"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/dialogue/relationship_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "get_character(2)",
        "files": [
          "backend/systems/combat/combat_state_class.py",
          "backend/systems/dialogue/relationship_integration.py"
        ],
        "function_name": "get_character"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/dialogue/motif_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_active_motifs(2)",
        "files": [
          "backend/systems/llm/repositories/player_repository.py",
          "backend/systems/dialogue/motif_integration.py"
        ],
        "function_name": "get_active_motifs"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/poi/event_handlers.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__post_init__(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/poi/tilemap_service.py"
        ],
        "function_name": "__post_init__"
      },
      {
        "signature": "model_post_init(2)",
        "files": [
          "backend/systems/rumor/models/rumor.py",
          "backend/systems/poi/schemas.py"
        ],
        "function_name": "model_post_init"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/poi/schemas.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "transition_state(3)",
        "files": [
          "backend/systems/combat/managers/state_manager.py",
          "backend/systems/poi/services/poi_state_service.py"
        ],
        "function_name": "transition_state"
      },
      {
        "signature": "calculate_resource_production(1)",
        "files": [
          "backend/systems/poi/utils.py",
          "backend/systems/poi/services/resource_management_service.py"
        ],
        "function_name": "calculate_resource_production"
      },
      {
        "signature": "update_resources(2)",
        "files": [
          "backend/systems/poi/services/resource_management_service.py",
          "backend/systems/poi/services/resource_management_service.py"
        ],
        "function_name": "update_resources"
      },
      {
        "signature": "calculate_resource_production(1)",
        "files": [
          "backend/systems/poi/utils.py",
          "backend/systems/poi/services/poi_service.py"
        ],
        "function_name": "calculate_resource_production"
      },
      {
        "signature": "claim_region_hex(2)",
        "files": [
          "backend/systems/poi/services/poi_service.py",
          "backend/systems/poi/services/metropolitan_spread_service.py"
        ],
        "function_name": "claim_region_hex"
      },
      {
        "signature": "unclaim_region_hex(2)",
        "files": [
          "backend/systems/poi/services/poi_service.py",
          "backend/systems/poi/services/metropolitan_spread_service.py"
        ],
        "function_name": "unclaim_region_hex"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/region/service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "map_region_to_latlon(1)",
        "files": [
          "backend/systems/world_generation/generators/terrain_generator.py",
          "backend/systems/region/models.py"
        ],
        "function_name": "map_region_to_latlon"
      },
      {
        "signature": "fetch_weather_for_latlon(2)",
        "files": [
          "backend/systems/world_generation/generators/biome_generator.py",
          "backend/systems/region/models.py"
        ],
        "function_name": "fetch_weather_for_latlon"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/region/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/region/world_generator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_save_world_data(1)",
        "files": [
          "backend/systems/world_generation/world_manager.py",
          "backend/systems/region/world_generator.py"
        ],
        "function_name": "_save_world_data"
      },
      {
        "signature": "get_continent_by_id(2)",
        "files": [
          "backend/systems/world_generation/continent_repository.py",
          "backend/systems/region/world_generator.py"
        ],
        "function_name": "get_continent_by_id"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/region/generators.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/region/generators.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "validate_elevation(2)",
        "files": [
          "backend/systems/region/schemas.py",
          "backend/systems/region/schemas.py"
        ],
        "function_name": "validate_elevation"
      },
      {
        "signature": "validate_temperature(2)",
        "files": [
          "backend/systems/region/schemas.py",
          "backend/systems/region/schemas.py"
        ],
        "function_name": "validate_temperature"
      },
      {
        "signature": "validate_humidity(2)",
        "files": [
          "backend/systems/region/schemas.py",
          "backend/systems/region/schemas.py"
        ],
        "function_name": "validate_humidity"
      },
      {
        "signature": "validate_humidity(2)",
        "files": [
          "backend/systems/region/schemas.py",
          "backend/systems/region/schemas.py"
        ],
        "function_name": "validate_humidity"
      },
      {
        "signature": "calculate_distance(2)",
        "files": [
          "backend/systems/poi/utils.py",
          "backend/systems/region/utils.py"
        ],
        "function_name": "calculate_distance"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/region/repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_region_by_id(2)",
        "files": [
          "backend/systems/region/world_generator.py",
          "backend/systems/region/repository.py"
        ],
        "function_name": "get_region_by_id"
      },
      {
        "signature": "get_regions_by_continent(2)",
        "files": [
          "backend/systems/region/world_generator.py",
          "backend/systems/region/repository.py"
        ],
        "function_name": "get_regions_by_continent"
      },
      {
        "signature": "create_region(2)",
        "files": [
          "backend/systems/region/service.py",
          "backend/systems/region/repository.py"
        ],
        "function_name": "create_region"
      },
      {
        "signature": "update_region(3)",
        "files": [
          "backend/systems/region/service.py",
          "backend/systems/region/repository.py"
        ],
        "function_name": "update_region"
      },
      {
        "signature": "delete_region(2)",
        "files": [
          "backend/systems/region/service.py",
          "backend/systems/region/repository.py"
        ],
        "function_name": "delete_region"
      },
      {
        "signature": "get_region_service(0)",
        "files": [
          "backend/systems/region/router.py",
          "backend/systems/region/routers.py"
        ],
        "function_name": "get_region_service"
      },
      {
        "signature": "decay_region_tension(1)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "decay_region_tension"
      },
      {
        "signature": "check_faction_war_triggers(1)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "check_faction_war_triggers"
      },
      {
        "signature": "get_regions_by_tension(2)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "get_regions_by_tension"
      },
      {
        "signature": "get_region_factions_at_war(2)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "get_region_factions_at_war"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_load_tension_configs(1)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "_load_tension_configs"
      },
      {
        "signature": "calculate_tension(4)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "calculate_tension"
      },
      {
        "signature": "update_tension(6)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "update_tension"
      },
      {
        "signature": "_calculate_time_decay(5)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "_calculate_time_decay"
      },
      {
        "signature": "_get_player_impact(3)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "_get_player_impact"
      },
      {
        "signature": "_get_npc_impact(3)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "_get_npc_impact"
      },
      {
        "signature": "_get_environmental_impact(3)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "_get_environmental_impact"
      },
      {
        "signature": "_update_player_impact(4)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "_update_player_impact"
      },
      {
        "signature": "_update_npc_impact(4)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "_update_npc_impact"
      },
      {
        "signature": "_update_environmental_impact(4)",
        "files": [
          "backend/systems/tension_war/utils/tension_utils.py",
          "backend/systems/region/tension.py"
        ],
        "function_name": "_update_environmental_impact"
      },
      {
        "signature": "calculate_distance(2)",
        "files": [
          "backend/systems/poi/utils.py",
          "backend/systems/region/utils/__init__.py"
        ],
        "function_name": "calculate_distance"
      },
      {
        "signature": "get_direction(2)",
        "files": [
          "backend/systems/region/utils.py",
          "backend/systems/region/utils/__init__.py"
        ],
        "function_name": "get_direction"
      },
      {
        "signature": "normalize_coordinates(2)",
        "files": [
          "backend/systems/region/utils.py",
          "backend/systems/region/utils/__init__.py"
        ],
        "function_name": "normalize_coordinates"
      },
      {
        "signature": "calculate_biome_weights(2)",
        "files": [
          "backend/systems/region/utils.py",
          "backend/systems/region/utils/__init__.py"
        ],
        "function_name": "calculate_biome_weights"
      },
      {
        "signature": "determine_season(2)",
        "files": [
          "backend/systems/region/utils.py",
          "backend/systems/region/utils/__init__.py"
        ],
        "function_name": "determine_season"
      },
      {
        "signature": "validate_coordinates(1)",
        "files": [
          "backend/systems/region/utils.py",
          "backend/systems/region/utils/__init__.py"
        ],
        "function_name": "validate_coordinates"
      },
      {
        "signature": "blend_biomes(3)",
        "files": [
          "backend/systems/region/utils.py",
          "backend/systems/region/utils/__init__.py"
        ],
        "function_name": "blend_biomes"
      },
      {
        "signature": "generate_id(1)",
        "files": [
          "backend/systems/region/utils.py",
          "backend/systems/region/utils/__init__.py"
        ],
        "function_name": "generate_id"
      },
      {
        "signature": "simulate_revolt_in_poi(5)",
        "files": [
          "backend/systems/region/tension.py",
          "backend/systems/region/utils/region_revolt_utils.py"
        ],
        "function_name": "simulate_revolt_in_poi"
      },
      {
        "signature": "get_npc_level(1)",
        "files": [
          "backend/systems/character/npc/npc_leveling_utils.py",
          "backend/systems/region/utils/region_revolt_utils.py"
        ],
        "function_name": "get_npc_level"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/religion/services.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/religion/schemas.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/religion/repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__post_init__(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "__post_init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "is_complete(1)",
        "files": [
          "backend/systems/character/models/goal.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "is_complete"
      },
      {
        "signature": "__post_init__(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "__post_init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/quest/models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "update_arc_progress(4)",
        "files": [
          "backend/systems/quest/arc_manager.py",
          "backend/systems/quest/database.py"
        ],
        "function_name": "update_arc_progress"
      },
      {
        "signature": "unlock_next_chapter(3)",
        "files": [
          "backend/systems/quest/arc_manager.py",
          "backend/systems/quest/database.py"
        ],
        "function_name": "unlock_next_chapter"
      },
      {
        "signature": "register_event_handlers(0)",
        "files": [
          "backend/systems/population/events.py",
          "backend/systems/quest/faction_integration.py"
        ],
        "function_name": "register_event_handlers"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/quest/integration.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "generate_quest_title(2)",
        "files": [
          "backend/systems/quest/generator.py",
          "backend/systems/quest/utils.py"
        ],
        "function_name": "generate_quest_title"
      },
      {
        "signature": "calculate_quest_reward(2)",
        "files": [
          "backend/systems/quest/generator.py",
          "backend/systems/quest/utils.py"
        ],
        "function_name": "calculate_quest_reward"
      },
      {
        "signature": "dict(1)",
        "files": [
          "backend/systems/economy/models/market.py",
          "backend/systems/quest/utils.py"
        ],
        "function_name": "dict"
      },
      {
        "signature": "create_quest(1)",
        "files": [
          "backend/systems/quest/database.py",
          "backend/systems/quest/utils.py"
        ],
        "function_name": "create_quest"
      },
      {
        "signature": "get_quest(1)",
        "files": [
          "backend/systems/quest/database.py",
          "backend/systems/quest/utils.py"
        ],
        "function_name": "get_quest"
      },
      {
        "signature": "update_quest(2)",
        "files": [
          "backend/systems/quest/database.py",
          "backend/systems/quest/utils.py"
        ],
        "function_name": "update_quest"
      },
      {
        "signature": "create_journal_entry(1)",
        "files": [
          "backend/systems/quest/database.py",
          "backend/systems/quest/utils.py"
        ],
        "function_name": "create_journal_entry"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/quest/motif_integration.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/quest/quest_manager.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "generate_journal_entry(2)",
        "files": [
          "backend/systems/quest/utils.py",
          "backend/systems/quest/npc_quests.py"
        ],
        "function_name": "generate_journal_entry"
      },
      {
        "signature": "register_event_handlers(0)",
        "files": [
          "backend/systems/population/events.py",
          "backend/systems/quest/core/integration.py"
        ],
        "function_name": "register_event_handlers"
      },
      {
        "signature": "get_motif_patterns(2)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/quest/integrations/motif_integration.py"
        ],
        "function_name": "get_motif_patterns"
      },
      {
        "signature": "get_regional_motifs(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/quest/integrations/motif_integration.py"
        ],
        "function_name": "get_regional_motifs"
      },
      {
        "signature": "register_event_handlers(0)",
        "files": [
          "backend/systems/population/events.py",
          "backend/systems/quest/integrations/motif_integration.py"
        ],
        "function_name": "register_event_handlers"
      },
      {
        "signature": "unsubscribe(3)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/inventory/notification.py"
        ],
        "function_name": "unsubscribe"
      },
      {
        "signature": "validate_quantity(2)",
        "files": [
          "backend/systems/inventory/schemas.py",
          "backend/systems/inventory/schemas.py"
        ],
        "function_name": "validate_quantity"
      },
      {
        "signature": "validate_capacity(2)",
        "files": [
          "backend/systems/inventory/schemas.py",
          "backend/systems/inventory/schemas.py"
        ],
        "function_name": "validate_capacity"
      },
      {
        "signature": "validate_weight_limit(2)",
        "files": [
          "backend/systems/inventory/schemas.py",
          "backend/systems/inventory/schemas.py"
        ],
        "function_name": "validate_weight_limit"
      },
      {
        "signature": "validate_quantity(2)",
        "files": [
          "backend/systems/inventory/schemas.py",
          "backend/systems/inventory/schemas.py"
        ],
        "function_name": "validate_quantity"
      },
      {
        "signature": "validate_different_inventories(3)",
        "files": [
          "backend/systems/inventory/schemas.py",
          "backend/systems/inventory/schemas.py"
        ],
        "function_name": "validate_different_inventories"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/inventory/utils.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "get_by_id(2)",
        "files": [
          "backend/systems/magic/repositories/spell_effect_repository.py",
          "backend/systems/inventory/repository/inventory_repository.py"
        ],
        "function_name": "get_by_id"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/inventory/repository/inventory_item_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/inventory/models/inventory_item.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/inventory/models/inventory_item.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/inventory/models/item.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/inventory/models/item.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/inventory/models/item.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/inventory/models/inventory.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/inventory/models/inventory.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "get_region(2)",
        "files": [
          "backend/systems/region/service.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "get_region"
      },
      {
        "signature": "get_region_by_coordinates(3)",
        "files": [
          "backend/systems/region/service.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "get_region_by_coordinates"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "save_to_file(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "save_to_file"
      },
      {
        "signature": "load_from_file(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "load_from_file"
      },
      {
        "signature": "advance_time(2)",
        "files": [
          "backend/systems/time/utils/time_utils.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "advance_time"
      },
      {
        "signature": "update_weather(2)",
        "files": [
          "backend/systems/time/services/time_manager.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "update_weather"
      },
      {
        "signature": "remove_event(2)",
        "files": [
          "backend/systems/poi/services/lifecycle_events_service.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "remove_event"
      },
      {
        "signature": "add_quest(2)",
        "files": [
          "backend/systems/region/router.py",
          "backend/systems/world_state/consolidated_world_models.py"
        ],
        "function_name": "add_quest"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/world_state/consolidated_state_models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_state/optimized_worldgen.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_state/loader.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "create_backup(2)",
        "files": [
          "backend/systems/time/repositories/time_repository.py",
          "backend/systems/world_state/loader.py"
        ],
        "function_name": "create_backup"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/world_state/consolidated_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/consolidated_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_register_event_handlers(1)",
        "files": [
          "backend/systems/dialogue/memory_integration.py",
          "backend/systems/world_state/consolidated_manager.py"
        ],
        "function_name": "_register_event_handlers"
      },
      {
        "signature": "get_state_variable(2)",
        "files": [
          "backend/systems/llm/repositories/world_repository.py",
          "backend/systems/world_state/consolidated_manager.py"
        ],
        "function_name": "get_state_variable"
      },
      {
        "signature": "shutdown(1)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/world_state/consolidated_manager.py"
        ],
        "function_name": "shutdown"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/world_state/world_state_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_state/world_state_manager.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/world_state_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "add_region(2)",
        "files": [
          "backend/systems/world_state/consolidated_world_models.py",
          "backend/systems/world_state/world_state_manager.py"
        ],
        "function_name": "add_region"
      },
      {
        "signature": "get_region(2)",
        "files": [
          "backend/systems/region/service.py",
          "backend/systems/world_state/world_state_manager.py"
        ],
        "function_name": "get_region"
      },
      {
        "signature": "get_location(2)",
        "files": [
          "backend/systems/world_state/consolidated_manager.py",
          "backend/systems/world_state/world_state_manager.py"
        ],
        "function_name": "get_location"
      },
      {
        "signature": "get_pois_in_region(2)",
        "files": [
          "backend/systems/world_state/consolidated_world_models.py",
          "backend/systems/world_state/world_utils.py"
        ],
        "function_name": "get_pois_in_region"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/world_state/main.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/main.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "initialize(3)",
        "files": [
          "backend/systems/region/service.py",
          "backend/systems/world_state/main.py"
        ],
        "function_name": "initialize"
      },
      {
        "signature": "shutdown(1)",
        "files": [
          "backend/systems/character/core/events/scene_event_system.py",
          "backend/systems/world_state/main.py"
        ],
        "function_name": "shutdown"
      },
      {
        "signature": "set_state(3)",
        "files": [
          "backend/systems/world_state/world_state_manager.py",
          "backend/systems/world_state/main.py"
        ],
        "function_name": "set_state"
      },
      {
        "signature": "get_state(2)",
        "files": [
          "backend/systems/world_state/world_state_manager.py",
          "backend/systems/world_state/main.py"
        ],
        "function_name": "get_state"
      },
      {
        "signature": "create_snapshot(3)",
        "files": [
          "backend/systems/world_state/consolidated_manager.py",
          "backend/systems/world_state/main.py"
        ],
        "function_name": "create_snapshot"
      },
      {
        "signature": "restore_snapshot(2)",
        "files": [
          "backend/systems/world_state/consolidated_manager.py",
          "backend/systems/world_state/main.py"
        ],
        "function_name": "restore_snapshot"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/worldgen_api.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(7)",
        "files": [
          "backend/systems/combat/combat_area.py",
          "backend/systems/world_state/integration/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/world_state/integration/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/world_state/integration/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_state/integration/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/world_state/integration/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/world_state/integration/event_integration.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/integration/event_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_register_event_handlers(1)",
        "files": [
          "backend/systems/dialogue/memory_integration.py",
          "backend/systems/world_state/integration/event_integration.py"
        ],
        "function_name": "_register_event_handlers"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/events_handlers/handlers.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(9)",
        "files": [
          "backend/systems/character/memory/memory_manager.py",
          "backend/systems/world_state/features/derivative_state.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__repr__(1)",
        "files": [
          "backend/systems/combat/combat_types_stub.py",
          "backend/systems/world_state/features/derivative_state.py"
        ],
        "function_name": "__repr__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/world_state/features/derivative_state.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "reset_instance(1)",
        "files": [
          "backend/systems/world_state/consolidated_manager.py",
          "backend/systems/world_state/features/derivative_state.py"
        ],
        "function_name": "reset_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/features/derivative_state.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "initialize(1)",
        "files": [
          "backend/systems/world_state/integration/event_integration.py",
          "backend/systems/world_state/features/derivative_state.py"
        ],
        "function_name": "initialize"
      },
      {
        "signature": "get_derived_value(2)",
        "files": [
          "backend/systems/world_state/main.py",
          "backend/systems/world_state/features/derivative_state.py"
        ],
        "function_name": "get_derived_value"
      },
      {
        "signature": "_handle_state_change(2)",
        "files": [
          "backend/systems/world_state/integration/event_integration.py",
          "backend/systems/world_state/features/derivative_state.py"
        ],
        "function_name": "_handle_state_change"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_state/utils/newspaper_system.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "log_world_event(1)",
        "files": [
          "backend/systems/region/utils/region_revolt_utils.py",
          "backend/systems/world_state/utils/world_event_utils.py"
        ],
        "function_name": "log_world_event"
      },
      {
        "signature": "process_world_tick(1)",
        "files": [
          "backend/systems/world_state/world_utils.py",
          "backend/systems/world_state/utils/tick_utils.py"
        ],
        "function_name": "process_world_tick"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/utils/tick_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/utils/tick_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/world_state/utils/tick_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/world_state/utils/terrain_generator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "main(0)",
        "files": [
          "backend/systems/remove_deprecated_utils.py",
          "backend/systems/world_state/examples/integration_example.py"
        ],
        "function_name": "main"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/world_state/persistence/state_storage.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "save_state(2)",
        "files": [
          "backend/systems/combat/combat_state_manager.py",
          "backend/systems/world_state/persistence/state_storage.py"
        ],
        "function_name": "save_state"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/world_state/mods/mod_synchronizer.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/world_state/mods/synchronizers/state_synchronizer.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_state(2)",
        "files": [
          "backend/systems/world_state/world_state_manager.py",
          "backend/systems/world_state/api/state_api.py"
        ],
        "function_name": "get_state"
      },
      {
        "signature": "get_current_user(0)",
        "files": [
          "backend/systems/economy/routers/shop_router.py",
          "backend/systems/world_state/api/router.py"
        ],
        "function_name": "get_current_user"
      },
      {
        "signature": "__init__(5)",
        "files": [
          "backend/systems/llm/core/gpt_integration.py",
          "backend/systems/crafting/models/ingredient.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/crafting/models/ingredient.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/crafting/models/result.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/crafting/models/result.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(8)",
        "files": [
          "backend/systems/combat/combat_animation_system.py",
          "backend/systems/crafting/models/station.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "set_metadata(3)",
        "files": [
          "backend/systems/crafting/models/result.py",
          "backend/systems/crafting/models/station.py"
        ],
        "function_name": "set_metadata"
      },
      {
        "signature": "get_metadata(3)",
        "files": [
          "backend/systems/crafting/models/result.py",
          "backend/systems/crafting/models/station.py"
        ],
        "function_name": "get_metadata"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/crafting/models/station.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "set_metadata(3)",
        "files": [
          "backend/systems/crafting/models/result.py",
          "backend/systems/crafting/models/recipe.py"
        ],
        "function_name": "set_metadata"
      },
      {
        "signature": "get_metadata(3)",
        "files": [
          "backend/systems/crafting/models/result.py",
          "backend/systems/crafting/models/recipe.py"
        ],
        "function_name": "get_metadata"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/crafting/models/recipe.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/crafting/services/crafting_knowledge_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(6)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/crafting/services/crafting_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "learn_recipe(3)",
        "files": [
          "backend/systems/crafting/services/crafting_knowledge_service.py",
          "backend/systems/crafting/services/crafting_service.py"
        ],
        "function_name": "learn_recipe"
      },
      {
        "signature": "discover_recipe(4)",
        "files": [
          "backend/systems/crafting/services/crafting_knowledge_service.py",
          "backend/systems/crafting/services/crafting_service.py"
        ],
        "function_name": "discover_recipe"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/crafting/services/crafting_achievement_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/crafting/services/station_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/crafting/services/recipe_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/crafting/services/crafting_experience_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/events/batch_processor.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_stats(1)",
        "files": [
          "backend/systems/combat/object_pool.py",
          "backend/systems/events/batch_processor.py"
        ],
        "function_name": "get_stats"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/events/batch_processor.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/events/models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "get_instance(1)",
        "files": [
          "backend/systems/motif/managers/motif_manager.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "get_instance"
      },
      {
        "signature": "reset_instance(1)",
        "files": [
          "backend/systems/world_state/consolidated_manager.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "reset_instance"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "subscribe(4)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "subscribe"
      },
      {
        "signature": "unsubscribe(3)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "unsubscribe"
      },
      {
        "signature": "add_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "add_middleware"
      },
      {
        "signature": "publish(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "publish"
      },
      {
        "signature": "publish_sync(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "publish_sync"
      },
      {
        "signature": "dispatch(2)",
        "files": [
          "backend/systems/character/core/events/scene_events.py",
          "backend/systems/events/event_dispatcher.py"
        ],
        "function_name": "dispatch"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/events/event_base.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "from_dict(2)",
        "files": [
          "backend/systems/world_generation/config.py",
          "backend/systems/events/event_base.py"
        ],
        "function_name": "from_dict"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/events/event_base.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/events/event_base.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "process_event(2)",
        "files": [
          "backend/systems/events/event_dispatcher.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process_event"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "process_event(2)",
        "files": [
          "backend/systems/events/event_dispatcher.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process_event"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "process_event(2)",
        "files": [
          "backend/systems/events/event_dispatcher.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process_event"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "process_event(2)",
        "files": [
          "backend/systems/events/event_dispatcher.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process_event"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "add_middleware(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "add_middleware"
      },
      {
        "signature": "add(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "add"
      },
      {
        "signature": "process(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "process_event(2)",
        "files": [
          "backend/systems/events/event_dispatcher.py",
          "backend/systems/events/middleware.py"
        ],
        "function_name": "process_event"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/events/utils/event_utils.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "subscribe(4)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/utils/event_utils.py"
        ],
        "function_name": "subscribe"
      },
      {
        "signature": "unsubscribe(3)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/utils/event_utils.py"
        ],
        "function_name": "unsubscribe"
      },
      {
        "signature": "publish(2)",
        "files": [
          "backend/systems/llm/core/event_integration.py",
          "backend/systems/events/utils/event_utils.py"
        ],
        "function_name": "publish"
      },
      {
        "signature": "publish_batch(2)",
        "files": [
          "backend/systems/events/event_dispatcher.py",
          "backend/systems/events/utils/event_utils.py"
        ],
        "function_name": "publish_batch"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/arc/repositories/progression_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/arc/repositories/integration_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/arc/repositories/arc_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/arc/repositories/arc_step_repository.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "update_timestamp(1)",
        "files": [
          "backend/systems/poi/models.py",
          "backend/systems/arc/models/arc_integration.py"
        ],
        "function_name": "update_timestamp"
      },
      {
        "signature": "update_timestamp(1)",
        "files": [
          "backend/systems/poi/models.py",
          "backend/systems/arc/models/arc_step.py"
        ],
        "function_name": "update_timestamp"
      },
      {
        "signature": "update_timestamp(1)",
        "files": [
          "backend/systems/poi/models.py",
          "backend/systems/arc/models/arc.py"
        ],
        "function_name": "update_timestamp"
      },
      {
        "signature": "update_timestamp(1)",
        "files": [
          "backend/systems/poi/models.py",
          "backend/systems/arc/models/arc_progression.py"
        ],
        "function_name": "update_timestamp"
      },
      {
        "signature": "add_participant(3)",
        "files": [
          "backend/systems/dialogue/dialogue_system.py",
          "backend/systems/arc/models/arc_progression.py"
        ],
        "function_name": "add_participant"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/arc/services/arc_generator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/arc/services/quest_integration.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(4)",
        "files": [
          "backend/systems/economy/services/futures_service.py",
          "backend/systems/arc/services/arc_manager.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/arc/services/progression_tracker.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "validate_json_schema(2)",
        "files": [
          "backend/systems/shared/utils/json_storage_utils.py",
          "backend/systems/data/schema_validator.py"
        ],
        "function_name": "validate_json_schema"
      },
      {
        "signature": "validate_world_seed(1)",
        "files": [
          "backend/systems/world_generation/seed_loader.py",
          "backend/systems/data/schema_validator.py"
        ],
        "function_name": "validate_world_seed"
      },
      {
        "signature": "validate_adjacency_rules(1)",
        "files": [
          "backend/systems/world_generation/biomes/biome_manager.py",
          "backend/systems/data/schema_validator.py"
        ],
        "function_name": "validate_adjacency_rules"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/data/schema_validator.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "validate(3)",
        "files": [
          "backend/systems/character/utils/validation.py",
          "backend/systems/data/schema_validator.py"
        ],
        "function_name": "validate"
      },
      {
        "signature": "__post_init__(1)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/data/data_events.py"
        ],
        "function_name": "__post_init__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/data/utils/data_file_loader.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "clear_cache(1)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/data/utils/data_file_loader.py"
        ],
        "function_name": "clear_cache"
      },
      {
        "signature": "load_json_file(1)",
        "files": [
          "backend/systems/loot/data_access.py",
          "backend/systems/data/utils/data_loader.py"
        ],
        "function_name": "load_json_file"
      },
      {
        "signature": "get_file_metadata(1)",
        "files": [
          "backend/systems/data/utils/data_file_loader.py",
          "backend/systems/data/utils/data_loader.py"
        ],
        "function_name": "get_file_metadata"
      },
      {
        "signature": "load_data_directory(2)",
        "files": [
          "backend/systems/data/utils/data_file_loader.py",
          "backend/systems/data/utils/data_loader.py"
        ],
        "function_name": "load_data_directory"
      },
      {
        "signature": "from_json(2)",
        "files": [
          "backend/systems/combat/combat_facade.py",
          "backend/systems/data/models/data_model.py"
        ],
        "function_name": "from_json"
      },
      {
        "signature": "validate_against_schema(3)",
        "files": [
          "backend/systems/data/schema_validator.py",
          "backend/systems/data/schemas/biome_schema.py"
        ],
        "function_name": "validate_against_schema"
      },
      {
        "signature": "validate_adjacency_rules(1)",
        "files": [
          "backend/systems/world_generation/biomes/biome_manager.py",
          "backend/systems/data/schemas/biome_schema.py"
        ],
        "function_name": "validate_adjacency_rules"
      },
      {
        "signature": "validate_json_schema(2)",
        "files": [
          "backend/systems/shared/utils/json_storage_utils.py",
          "backend/systems/data/schemas/biome_schema.py"
        ],
        "function_name": "validate_json_schema"
      },
      {
        "signature": "validate_biome_data(1)",
        "files": [
          "backend/systems/data/schema_validator.py",
          "backend/systems/data/schemas/biome_schema.py"
        ],
        "function_name": "validate_biome_data"
      },
      {
        "signature": "validate_range(2)",
        "files": [
          "backend/systems/data/models/data_model.py",
          "backend/systems/data/schemas/biome_schema.py"
        ],
        "function_name": "validate_range"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/data/schemas/biome_schema.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/data/schemas/biome_schema.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "get_biome(2)",
        "files": [
          "backend/systems/dialogue/region_integration.py",
          "backend/systems/data/schemas/biome_schema.py"
        ],
        "function_name": "get_biome"
      },
      {
        "signature": "validate_biome(1)",
        "files": [
          "backend/systems/data/schemas/biome_schema.py",
          "backend/systems/data/schemas/validation.py"
        ],
        "function_name": "validate_biome"
      },
      {
        "signature": "validate_adjacency_rules(1)",
        "files": [
          "backend/systems/world_generation/biomes/biome_manager.py",
          "backend/systems/data/schemas/validation.py"
        ],
        "function_name": "validate_adjacency_rules"
      },
      {
        "signature": "publish_data_event(1)",
        "files": [
          "backend/systems/data/data_events.py",
          "backend/systems/data/events/data_events.py"
        ],
        "function_name": "publish_data_event"
      },
      {
        "signature": "notify_data_loaded(3)",
        "files": [
          "backend/systems/data/data_events.py",
          "backend/systems/data/events/data_events.py"
        ],
        "function_name": "notify_data_loaded"
      },
      {
        "signature": "notify_data_modified(3)",
        "files": [
          "backend/systems/data/data_events.py",
          "backend/systems/data/events/data_events.py"
        ],
        "function_name": "notify_data_modified"
      },
      {
        "signature": "notify_validation_error(4)",
        "files": [
          "backend/systems/data/data_events.py",
          "backend/systems/data/events/data_events.py"
        ],
        "function_name": "notify_validation_error"
      },
      {
        "signature": "handle_data_event(1)",
        "files": [
          "backend/systems/data/data_events.py",
          "backend/systems/data/events/data_events.py"
        ],
        "function_name": "handle_data_event"
      },
      {
        "signature": "__init__(7)",
        "files": [
          "backend/systems/combat/combat_area.py",
          "backend/systems/data/events/data_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__str__(1)",
        "files": [
          "backend/systems/motif/models.py",
          "backend/systems/data/events/data_events.py"
        ],
        "function_name": "__str__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/data/loaders/game_data_registry.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "load_all(1)",
        "files": [
          "backend/systems/time/repositories/time_repository.py",
          "backend/systems/data/loaders/game_data_registry.py"
        ],
        "function_name": "load_all"
      },
      {
        "signature": "get_biome(2)",
        "files": [
          "backend/systems/dialogue/region_integration.py",
          "backend/systems/data/loaders/game_data_registry.py"
        ],
        "function_name": "get_biome"
      },
      {
        "signature": "are_biomes_compatible(3)",
        "files": [
          "backend/systems/world_generation/biomes/biome_manager.py",
          "backend/systems/data/loaders/game_data_registry.py"
        ],
        "function_name": "are_biomes_compatible"
      },
      {
        "signature": "get_transition_biomes(3)",
        "files": [
          "backend/systems/world_generation/biomes/biome_manager.py",
          "backend/systems/data/loaders/game_data_registry.py"
        ],
        "function_name": "get_transition_biomes"
      },
      {
        "signature": "get_cached_data(3)",
        "files": [
          "backend/systems/world_generation/components.py",
          "backend/systems/data/loaders/game_data_registry.py"
        ],
        "function_name": "get_cached_data"
      },
      {
        "signature": "_calculate_factor_score(3)",
        "files": [
          "backend/systems/world_state/utils/terrain_generator.py",
          "backend/systems/data/loaders/game_data_registry.py"
        ],
        "function_name": "_calculate_factor_score"
      },
      {
        "signature": "get_adjacency_rules(1)",
        "files": [
          "backend/systems/region/service.py",
          "backend/systems/data/loaders/game_data_registry.py"
        ],
        "function_name": "get_adjacency_rules"
      },
      {
        "signature": "__new__(1)",
        "files": [
          "backend/systems/llm/services/gpt_client.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "__new__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "initialize(1)",
        "files": [
          "backend/systems/world_state/integration/event_integration.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "initialize"
      },
      {
        "signature": "get_biome(2)",
        "files": [
          "backend/systems/dialogue/region_integration.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "get_biome"
      },
      {
        "signature": "get_all_biomes(1)",
        "files": [
          "backend/systems/world_state/utils/terrain_generator.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "get_all_biomes"
      },
      {
        "signature": "are_biomes_compatible(3)",
        "files": [
          "backend/systems/world_generation/biomes/biome_manager.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "are_biomes_compatible"
      },
      {
        "signature": "get_transition_biomes(3)",
        "files": [
          "backend/systems/world_generation/biomes/biome_manager.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "get_transition_biomes"
      },
      {
        "signature": "get_river_rules(1)",
        "files": [
          "backend/systems/data/loaders/game_data_registry.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "get_river_rules"
      },
      {
        "signature": "load_data_file(2)",
        "files": [
          "backend/systems/data/utils/data_file_loader.py",
          "backend/systems/data/services/data_service.py"
        ],
        "function_name": "load_data_file"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/equipment/service.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/equipment/models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/equipment/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/equipment/models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/equipment/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/equipment/models.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/equipment/models.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "get_shop_inventory(1)",
        "files": [
          "backend/systems/economy/utils/shop_utils.py",
          "backend/systems/equipment/shop_utils.py"
        ],
        "function_name": "get_shop_inventory"
      },
      {
        "signature": "gpt_flavor_identify_effect(2)",
        "files": [
          "backend/systems/equipment/identify_item_utils.py",
          "backend/systems/equipment/router.py"
        ],
        "function_name": "gpt_flavor_identify_effect"
      },
      {
        "signature": "gpt_flavor_reveal_full_item(1)",
        "files": [
          "backend/systems/equipment/identify_item_utils.py",
          "backend/systems/equipment/router.py"
        ],
        "function_name": "gpt_flavor_reveal_full_item"
      },
      {
        "signature": "load_equipment_rules(0)",
        "files": [
          "backend/systems/character/inventory/inventory_utils.py",
          "backend/systems/equipment/inventory_utils.py"
        ],
        "function_name": "load_equipment_rules"
      },
      {
        "signature": "calculate_carry_capacity(1)",
        "files": [
          "backend/systems/character/inventory/inventory_utils.py",
          "backend/systems/equipment/inventory_utils.py"
        ],
        "function_name": "calculate_carry_capacity"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/npc/npc_loyalty_class.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "should_abandon(1)",
        "files": [
          "backend/systems/character/npc/npc_utils.py",
          "backend/systems/npc/npc_loyalty_class.py"
        ],
        "function_name": "should_abandon"
      },
      {
        "signature": "to_dict(1)",
        "files": [
          "backend/systems/economy/models/commodity_future.py",
          "backend/systems/npc/npc_loyalty_class.py"
        ],
        "function_name": "to_dict"
      },
      {
        "signature": "__init__(3)",
        "files": [
          "backend/systems/economy/services/trade_service.py",
          "backend/systems/npc/npc_builder_class.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "create_npc(1)",
        "files": [
          "backend/systems/character/npc/npc_utils.py",
          "backend/systems/npc/npc_builder_class.py"
        ],
        "function_name": "create_npc"
      },
      {
        "signature": "update_npc(2)",
        "files": [
          "backend/systems/character/npc/npc_utils.py",
          "backend/systems/npc/npc_builder_class.py"
        ],
        "function_name": "update_npc"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/npc/npc_location_service.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "__init__(1)",
        "files": [
          "backend/systems/economy/models/economic_metric.py",
          "backend/systems/npc/models/npc_events.py"
        ],
        "function_name": "__init__"
      },
      {
        "signature": "_verify_compatibility(0)",
        "files": [
          "backend/systems/motif/utils.py",
          "backend/systems/npc/services/npc_service.py"
        ],
        "function_name": "_verify_compatibility"
      },
      {
        "signature": "__verify_compatibility__(0)",
        "files": [
          "backend/systems/llm/core/faction_system.py",
          "backend/systems/npc/services/services/core/npc_service.py"
        ],
        "function_name": "__verify_compatibility__"
      },
      {
        "signature": "__init__(2)",
        "files": [
          "backend/systems/economy/economy_manager.py",
          "backend/systems/analytics/models/__init__.py"
        ],
        "function_name": "__init__"
      }
    ],
    "documentation_updates": []
  },
  "recommendations": [
    "Review and implement TODO comments or remove if obsolete",
    "Remove deprecated functions and update callers",
    "Remove unused imports to clean up code",
    "Consolidate duplicate function implementations",
    "Update imports to use canonical backend.systems.* format",
    "Ensure all tests are in /backend/tests/ directory",
    "Verify all modules follow Development_Bible.md standards"
  ]
}