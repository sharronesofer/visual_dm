apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: visual-dm-db
  namespace: visual-dm
  labels:
    app: visual-dm
    component: db
spec:
  serviceName: visual-dm-db
  replicas: 1
  selector:
    matchLabels:
      app: visual-dm
      component: db
  template:
    metadata:
      labels:
        app: visual-dm
        component: db
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: visual-dm-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: visual-dm-secrets
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: visual-dm-secrets
              key: postgres-db
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "1Gi"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - "$(POSTGRES_USER)"
            - -d
            - "$(POSTGRES_DB)"
          initialDelaySeconds: 40
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - "$(POSTGRES_USER)"
            - -d
            - "$(POSTGRES_DB)"
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi 