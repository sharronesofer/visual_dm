{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Weather Types Schema",
  "description": "Schema for defining weather types and their properties in the VisualDM system",
  "type": "object",
  "additionalProperties": {
    "$ref": "#/definitions/WeatherDefinition"
  },
  "minProperties": 1,
  "definitions": {
    "WeatherDefinition": {
      "type": "object",
      "required": ["Id", "DisplayName", "Description", "Temperature", "VisibilityModifier", "MovementModifier", "CombatModifier", "CloudCover", "CanTransitionTo", "SeasonalProbability"],
      "properties": {
        "Id": {
          "type": "string",
          "description": "Unique identifier for the weather type"
        },
        "DisplayName": {
          "type": "string",
          "description": "User-friendly name of the weather type"
        },
        "Description": {
          "type": "string",
          "description": "Description of the weather conditions"
        },
        "Temperature": {
          "type": "integer",
          "description": "Base temperature in degrees"
        },
        "VisibilityModifier": {
          "type": "integer",
          "description": "Modifier to visibility (negative reduces visibility)",
          "minimum": -10,
          "maximum": 10
        },
        "MovementModifier": {
          "type": "integer",
          "description": "Modifier to movement speed (negative slows movement)",
          "minimum": -10,
          "maximum": 10
        },
        "CombatModifier": {
          "type": "integer",
          "description": "Modifier to combat effectiveness (negative imposes penalties)",
          "minimum": -10,
          "maximum": 10
        },
        "CloudCover": {
          "type": "number",
          "description": "Amount of cloud cover (0.0-1.0)",
          "minimum": 0,
          "maximum": 1
        },
        "CanTransitionTo": {
          "type": "array",
          "description": "List of weather types this can transition to",
          "items": {
            "type": "string"
          }
        },
        "SeasonalProbability": {
          "type": "object",
          "description": "Probability of this weather by season (0.0-1.0)",
          "required": ["Spring", "Summer", "Autumn", "Winter"],
          "properties": {
            "Spring": {
              "type": "number",
              "description": "Probability in spring",
              "minimum": 0,
              "maximum": 1
            },
            "Summer": {
              "type": "number",
              "description": "Probability in summer",
              "minimum": 0,
              "maximum": 1
            },
            "Autumn": {
              "type": "number",
              "description": "Probability in autumn",
              "minimum": 0,
              "maximum": 1
            },
            "Winter": {
              "type": "number",
              "description": "Probability in winter",
              "minimum": 0,
              "maximum": 1
            }
          }
        },
        "VisualEffects": {
          "type": "object",
          "description": "Visual effects for rendering the weather",
          "properties": {
            "SkyboxTint": {
              "type": "object",
              "description": "Color tint for the skybox",
              "required": ["r", "g", "b", "a"],
              "properties": {
                "r": { "type": "number", "minimum": 0, "maximum": 1 },
                "g": { "type": "number", "minimum": 0, "maximum": 1 },
                "b": { "type": "number", "minimum": 0, "maximum": 1 },
                "a": { "type": "number", "minimum": 0, "maximum": 1 }
              }
            },
            "SunIntensity": {
              "type": "number",
              "description": "Intensity of the sun light",
              "minimum": 0
            },
            "CloudTexture": {
              "type": "string",
              "description": "Texture to use for clouds"
            },
            "ParticleEffects": {
              "type": "array",
              "description": "Particle effects to enable",
              "items": {
                "type": "string"
              }
            },
            "FogDensity": {
              "type": "number",
              "description": "Density of fog (0.0-1.0)",
              "minimum": 0,
              "maximum": 1
            },
            "FogColor": {
              "type": "object",
              "description": "Color of fog",
              "required": ["r", "g", "b", "a"],
              "properties": {
                "r": { "type": "number", "minimum": 0, "maximum": 1 },
                "g": { "type": "number", "minimum": 0, "maximum": 1 },
                "b": { "type": "number", "minimum": 0, "maximum": 1 },
                "a": { "type": "number", "minimum": 0, "maximum": 1 }
              }
            },
            "LightningFrequency": {
              "type": "object",
              "description": "Range of seconds between lightning flashes",
              "required": ["min", "max"],
              "properties": {
                "min": { "type": "number", "minimum": 0 },
                "max": { "type": "number", "minimum": 0 }
              }
            },
            "ShaderEffects": {
              "type": "array",
              "description": "Special shader effects to enable",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "SoundEffects": {
          "type": "object",
          "description": "Sound effects for the weather",
          "properties": {
            "AmbientLoop": {
              "type": "string",
              "description": "Ambient sound loop to play"
            },
            "RandomSounds": {
              "type": "array",
              "description": "Random sounds to play occasionally",
              "items": {
                "type": "string"
              }
            },
            "Intensity": {
              "type": "string",
              "description": "Intensity of the sound effects",
              "enum": ["low", "medium", "high", "dynamic"]
            }
          }
        }
      }
    }
  }
} 